Program.Sub.ScreenSU.Start
Gui.F_WO..Create
Gui.F_WO..Caption("Open Work Order Project/Phase Dashboard")
Gui.F_WO..Size(15375,11490)
Gui.F_WO..MinX(15375)
Gui.F_WO..MinY(11490)
Gui.F_WO..Position(0,0)
Gui.F_WO..BackColor(-2147483633)
Gui.F_WO..MousePointer(0)
Gui.F_WO..Event(UnLoad,Form_UnLoad)
Gui.F_WO.GsGCWO.Create(GsGridControl)
Gui.F_WO.GsGCWO.Size(15000,9015)
Gui.F_WO.GsGCWO.Position(45,1035)
Gui.F_WO.GsGCWO.Event(RowCellClick,GsGCWO_RowCellClick)
Gui.F_WO.GsGCWO.Event(CellValueChanged,GsGCWO_CellValueChanged)
Gui.F_WO.progressBarStatus.Create(ProgressBar)
Gui.F_WO.progressBarStatus.Size(4110,255)
Gui.F_WO.progressBarStatus.Position(45,330)
Gui.F_WO.progressBarStatus.Visible(False)
Gui.F_WO.lblStatus.Create(Label,"****Change****",False,4110,255,0,45,105,True,0,"Arial",10,-2147483633,0)
Gui.F_WO.picGSSLogo.Create(PictureBox)
Gui.F_WO.picGSSLogo.Size(4125,960)
Gui.F_WO.picGSSLogo.Position(5520,45)
Gui.F_WO.picGSSLogo.Event(DblClick,picGSSLogo_DblClick)
Gui.F_WO.picGSSLogo.ToolTip("Double-Click for additional functions")
Gui.F_WO.framePermissions.Create(Frame)
Gui.F_WO.framePermissions.Size(1965,390)
Gui.F_WO.framePermissions.Position(13080,555)
Gui.F_WO.optView.Create(Option)
Gui.F_WO.optView.Size(690,195)
Gui.F_WO.optView.Position(225,150)
Gui.F_WO.optView.Caption("View")
Gui.F_WO.optView.BackColor(15790320)
Gui.F_WO.optView.ForeColor(0)
Gui.F_WO.optView.Parent("framePermissions")
Gui.F_WO.optView.Event(Click,EditMode)
Gui.F_WO.optEdit.Create(Option)
Gui.F_WO.optEdit.Enabled(False)
Gui.F_WO.optEdit.Size(690,195)
Gui.F_WO.optEdit.Position(1050,150)
Gui.F_WO.optEdit.Caption("Edit")
Gui.F_WO.optEdit.Parent("framePermissions")
Gui.F_WO.optEdit.Event(Click,EditMode)
Gui.F_WO.cmdPrint.Create(Button)
Gui.F_WO.cmdPrint.Size(1395,375)
Gui.F_WO.cmdPrint.Position(10770,10170)
Gui.F_WO.cmdPrint.Caption("Print Selected")
Gui.F_WO.cmdPrint.Event(Click,Print_Selected_Click)
Gui.F_WO.cmdPrint.Anchor(10)
Gui.F_WO.cmdClose.Create(Button)
Gui.F_WO.cmdClose.Enabled(False)
Gui.F_WO.cmdClose.Size(1395,375)
Gui.F_WO.cmdClose.Position(12225,10170)
Gui.F_WO.cmdClose.Caption("Close Selected")
Gui.F_WO.cmdClose.Anchor(10)
Gui.F_WO.cmdClose.Event(Click,Close_Selected_Click)
Gui.F_WO.cmdSave.Create(Button)
Gui.F_WO.cmdSave.Enabled(False)
Gui.F_WO.cmdSave.Size(1395,375)
Gui.F_WO.cmdSave.Position(13680,10170)
Gui.F_WO.cmdSave.Caption("Save")
Gui.F_WO.cmdSave.Anchor(10)
Gui.F_WO.cmdSave.Event(Click,Save_Click)
Gui.Form..Create
Gui.Form..Caption("Physical Inventory Adjustment")
Gui.Form..Size(9810,4875)
Gui.Form..MinX(0)
Gui.Form..MinY(0)
Gui.Form..Position(0,0)
Gui.Form..BackColor(-2147483633)
Gui.Form..MousePointer(0)
Gui.Form..Event(UnLoad,InvGridClose)
Gui.Form.lblPartNo.Create(Label,"Label",True,2370,255,0,180,240,True,0,"Arial",8,-2147483633,0)
Gui.Form.gsgcPIA.Create(GsGridControl)
Gui.Form.gsgcPIA.Size(9285,3405)
Gui.Form.gsgcPIA.Position(210,630)
Gui.Form.gsgcPIA.Event(CellValueChanged,InvQtyTab)
Gui.Form.lblLocn.Create(Label,"Label",True,1020,255,0,3420,240,True,0,"Arial",8,-2147483633,0)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
	V.Global.sError.Declare()
	V.Global.sCustomer.Declare()
	V.Global.bLoadData.Declare()
	V.Global.bLongPart.Declare()
	
	Program.External.Include.Library("PPT_Canny.lib")
	Program.External.Include.Library("2003.lib")
	
Program.Sub.Preflight.End

Program.Sub.Main.Start
'Standard dashboard for the Work Order Project/Phase dashboard 
'Original project number is 4135, GS Certified, coded by Andres Valdez.
'This is a version modified by FEQ on Feb 27, 2020, for Exact Corp.
	
	V.Local.sIcon.Declare()
	V.Local.sGssLogo.Declare()
	V.Local.sError.Declare(String, "")
	
	F.Intrinsic.Control.Try
		
		F.Intrinsic.Control.Try
			
			F.Intrinsic.String.Build("{0}\ART\gss2.ico", V.Caller.GlobalDir, V.Local.sIcon)		
			F.Intrinsic.String.Build("{0}\ART\GAB_GSS_Logo_Green_Dash.png", V.Caller.GlobalDir, V.Local.sGssLogo)
			Gui.F_WO..Icon(V.Local.sIcon)
			Gui.F_WO.picGSSLogo.Picture(V.Local.sGssLogo)
		
			F.Intrinsic.Control.CallSub(CannyCheckUser, "Form", "F_WO")
		
		F.Intrinsic.Control.Catch
			'Just keeping the project from ending solely because they dont have the correct images on their system.....
			F.Intrinsic.String.Build("Error retrieving images. Please verify that they exist:{0}{0}{1}{0}{2}", V.Ambient.NewLine, V.Local.sIcon, V.Local.sGssLogo, V.Local.sError)
			F.Intrinsic.UI.Msgbox(V.Local.sError, "LOGOS NOT LOADED IN DASHBOARD")
			
		F.Intrinsic.Control.EndTry
		
		Gui.F_WO.optView.Value(True)
		Gui.F_WO.optEdit.Value(False)
		
		F.Intrinsic.Control.CallSub(CheckPermissions)
		F.Intrinsic.Control.CallSub(SetAnchors)
		F.Intrinsic.Control.CallSub(SetContextMenu)
		
		Gui.F_WO..Show()
		
		'This line is used to time the population
'		F.Intrinsic.Debug.BenchmarkModeEnable
		
		F.ODBC.Connection!con.OpenConnection(V.Ambient.PDSN, V.Ambient.PUser, V.Ambient.PPass, 900)
		
		F.Intrinsic.Control.CallSub(CheckTable)
		F.Intrinsic.Control.CallSub(CheckLongPart)
		
		F.Intrinsic.Control.CallSub(RefreshScreen)
		
	F.Intrinsic.Control.Catch
	
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
		F.Intrinsic.UI.Msgbox(V.Global.sError)
		F.Intrinsic.Control.End()
		
	F.Intrinsic.Control.EndTry
	
Program.Sub.Main.End

Program.Sub.Form_UnLoad.Start
	F.Intrinsic.Control.Try
	
		F.Intrinsic.Control.If(V.Global.bLoadData)
			F.Intrinsic.Control.CallSub(Serialize)
		F.Intrinsic.Control.EndIf
		
		F.ODBC.Connection!con.Close()
		F.Intrinsic.Control.End()
	
	F.Intrinsic.Control.Catch
	
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
		F.Intrinsic.UI.Msgbox(V.Global.sError)
		F.Intrinsic.Control.End()
		
	F.Intrinsic.Control.EndTry
	
Program.Sub.Form_UnLoad.End

Program.Sub.CheckPermissions.Start
	V.Local.bEditWO.Declare()
	
	F.Intrinsic.Control.Try
	
		' If user has access to WO > New or WO > Open, then they have access to EditWO.
		F.Global.Security.CheckUserAccessIPM(636, 527, V.Local.bEditWO) ' New
		F.Intrinsic.Control.If(V.Local.bEditWO, =, False)
			F.Global.Security.CheckUserAccessIPM(635, 527, V.Local.bEditWO) ' Open
		F.Intrinsic.Control.EndIf
		
		' Also, if user belongs to group "EditWO", then they also have access.
		F.Intrinsic.Control.If(V.Local.bEditWO, =, False)
			F.Global.Security.IsInGroup(V.Caller.User, "EditWO", V.Caller.CompanyCode, V.Local.bEditWO)
		F.Intrinsic.Control.EndIf
	
		Gui.F_WO.optEdit.Enabled(V.Local.bEditWO)
	
	F.Intrinsic.Control.Catch
	
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
		F.Intrinsic.UI.Msgbox(V.Global.sError)
		F.Intrinsic.Control.End()
		
	F.Intrinsic.Control.EndTry
	
Program.Sub.CheckPermissions.End

Program.Sub.SetAnchors.Start
	' 0 - None
	' 1 - Top
	' 2 - Bottom
	' 4 - Left
	' 8 - Right

	F.Intrinsic.Control.Try
	
		Gui.F_WO.picGSSLogo.Anchor(1)
		Gui.F_WO.lblStatus.Anchor(5)
		Gui.F_WO.progressBarStatus.Anchor(5)
		Gui.F_WO.framePermissions.Anchor(9)
		Gui.F_WO.GsGCWO.Anchor(15)
	
	F.Intrinsic.Control.Catch
		
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
		F.Intrinsic.UI.Msgbox(V.Global.sError)
		F.Intrinsic.Control.End()
		
	F.Intrinsic.Control.EndTry
	
Program.Sub.SetAnchors.End

Program.Sub.SetContextMenu.Start
	F.Intrinsic.Control.Try
	
		Gui.F_WO..ContextMenuCreate("ctxWO")
		Gui.F_WO.GsGCWO.ContextMenuAttach("ctxWO")
		
		Gui.F_WO..ContextMenuAddItem("ctxWO", "Refresh", 0, "Refresh")
		Gui.F_WO..ContextMenuAddItem("ctxWO", "Export", 0, "Export")
		Gui.F_WO..ContextMenuAddItem("ctxWO", "ResetColumns", 0, "Reset Columns")
		
		Gui.F_WO..ContextMenuSetItemEventHandler("ctxWO", "Refresh", "ContextMenuRefresh")
		Gui.F_WO..ContextMenuSetItemEventHandler("ctxWO", "Export", "ContextMenuExport")
		Gui.F_WO..ContextMenuSetItemEventHandler("ctxWO", "ResetColumns", "ContextMenuReset")
		
	F.Intrinsic.Control.Catch
		
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
		F.Intrinsic.UI.Msgbox(V.Global.sError)
		F.Intrinsic.Control.End()
		
	F.Intrinsic.Control.EndTry
	
Program.Sub.SetContextMenu.End

Program.Sub.ContextMenuRefresh.Start
	F.Intrinsic.Control.CallSub(RefreshScreen)
	
Program.Sub.ContextMenuRefresh.End

Program.Sub.ContextMenuExport.Start
	V.Local.bExcel.Declare()
	V.Local.sFileExtension.Declare()
	V.Local.sFileExport.Declare()
	V.Local.bFileLocked.Declare()
	V.Local.sMsg.Declare()

	F.Intrinsic.Control.Try
	
		' If current machine has Excel, then prepare to export a .xlsx.
		' Else, prepare to export a .csv.
		F.Automation.MSExcel.CheckPresence(V.Local.bExcel)
		F.Intrinsic.Control.If(V.Local.bExcel)
			V.Local.sFileExtension.Set("xlsx")
			F.Intrinsic.String.Build("{0}\GAB_4135_Export.xlsx", V.Caller.LocalGssTempDir, V.Local.sFileExport)
		F.Intrinsic.Control.Else
			V.Local.sFileExtension.Set("csv")
			F.Intrinsic.String.Build("{0}\GAB_4135_Export.csv", V.Caller.LocalGssTempDir, V.Local.sFileExport)
		F.Intrinsic.Control.EndIf
		
		' If file is locked, then error.
		' Else, do the export.
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}", V.Ambient.NewLine, V.Local.sFileExport, V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg, "File In Use")
		F.Intrinsic.Control.Else
			Gui.F_WO.GsGCWO.Export(V.Local.sFileExport, V.Local.sFileExtension)
			F.Intrinsic.Task.ShellExec(0, "", V.Local.sFileExport, "", "", 1)
		F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
	
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
		F.Intrinsic.UI.Msgbox(V.Global.sError)
		F.Intrinsic.Control.End()
		
	F.Intrinsic.Control.EndTry
	
Program.Sub.ContextMenuExport.End

Program.Sub.ContextMenuReset.Start
	F.Intrinsic.Control.Try
		
		' Delete the saved serializations.
		F.Global.Registry.AddValue(V.Caller.User , V.Caller.CompanyCode, "gvWOs", 4135, 1000, False, "Serialize", False, 0, -999.0, 1/1/1980, 12:00:00 AM, "")
		F.Global.Registry.AddValue(V.Caller.User , V.Caller.CompanyCode, "gvMatl", 4135, 1000, False, "Serialize", False, 0, -999.0, 1/1/1980, 12:00:00 AM, "")
		F.Global.Registry.AddValue(V.Caller.User , V.Caller.CompanyCode, "gvMatlPoLines", 4135, 1000, False, "Serialize", False, 0, -999.0, 1/1/1980, 12:00:00 AM, "")
		F.Global.Registry.AddValue(V.Caller.User , V.Caller.CompanyCode, "gvLbr", 4135, 1000, False, "Serialize", False, 0, -999.0, 1/1/1980, 12:00:00 AM, "")
		F.Global.Registry.AddValue(V.Caller.User , V.Caller.CompanyCode, "gvOut", 4135, 1000, False, "Serialize", False, 0, -999.0, 1/1/1980, 12:00:00 AM, "")
		
		' Prevent RefreshScreen from doing Serialize.
		V.Global.bLoadData.Set(False)
		
		F.Intrinsic.Control.CallSub(RefreshScreen)
	
	F.Intrinsic.Control.Catch
		
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
		F.Intrinsic.UI.Msgbox(V.Global.sError)
		F.Intrinsic.Control.End()
		
	F.Intrinsic.Control.EndTry
	
Program.Sub.ContextMenuReset.End

Program.Sub.CheckTable.Start
	V.Local.bExists.Declare()
	
	F.Intrinsic.Control.Try
	
		Gui.F_WO.lblStatus.Caption("Checking Database Table....")
	
		F.ODBC.Connection!con.TableExists("GAB_4135_WO_NOTES", V.Local.bExists)
		F.Intrinsic.Control.If(V.Local.bExists, =, False)
			F.ODBC.Connection!con.Execute("CREATE TABLE GAB_4135_WO_NOTES(JS CHAR(9) NOT NULL,JOB CHAR(6),SUFFIX CHAR(3),NOTES LONGVARCHAR,PRIMARY KEY (JS));")
			F.ODBC.Connection!con.Execute("CREATE INDEX GAB_4135_WO_NOTES01 USING 1 ON GAB_4135_WO_NOTES(JOB);")
			F.ODBC.Connection!con.Execute("CREATE INDEX GAB_4135_WO_NOTES02 USING 2 ON GAB_4135_WO_NOTES(SUFFIX);")
		F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
	
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
		F.Intrinsic.UI.Msgbox(V.Global.sError)
		F.Intrinsic.Control.End()
		
	F.Intrinsic.Control.EndTry
	
Program.Sub.CheckTable.End

Program.Sub.CheckLongPart.Start
	F.Intrinsic.Control.Try
	
		F.Global.General.ReadOption("400861", 0, False, "0000", V.Global.bLongPart)
		F.Intrinsic.Control.If(V.Global.bLongPart, =, False)
			F.Global.General.ReadOption("400861", 0, False, "0004", V.Global.bLongPart)
		F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
	
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
		F.Intrinsic.UI.Msgbox(V.Global.sError)
		F.Intrinsic.Control.End()
	
	F.Intrinsic.Control.EndTry
	
Program.Sub.CheckLongPart.End

Program.Sub.RefreshScreen.Start
	F.Intrinsic.Control.Try
	
		F.Intrinsic.Control.If(V.Global.bLoadData)
		
			F.Intrinsic.Control.CallSub(Serialize)
			Gui.F_WO.GsGCWO.ClearRows("gvMatlPoLines")
			Gui.F_WO.GsGCWO.ClearRows("gvMatl")
			Gui.F_WO.GsGCWO.ClearRows("gvLbr")
			Gui.F_WO.GsGCWO.ClearRows("gvOut")
			Gui.F_WO.GsGCWO.ClearRows("gvChildMatlPoLines")
			Gui.F_WO.GsGCWO.ClearRows("gvChildMat")
			Gui.F_WO.GsGCWO.ClearRows("gvChildOut")
			Gui.F_WO.GsGCWO.ClearRows("gvLbrChild")
			Gui.F_WO.GsGCWO.ClearRows("gvChildWOs")
			Gui.F_WO.GsGCWO.ClearRows("gvWOs")
			
		F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.BlockEvents()
		F.Intrinsic.Control.CallSub(DisableScreen)
		
		F.Intrinsic.Control.CallSub(LoadDtDvWOs)
		F.Intrinsic.Control.CallSub(LoadGvWOs)
		F.Intrinsic.Control.CallSub(LoadDtDvGvMatl)
		F.Intrinsic.Control.CallSub(LoadDtDvGvLbr)
		F.Intrinsic.Control.CallSub(LoadDtDvGvOut)
		
		F.Intrinsic.Control.CallSub(ClosePopTables)
		
		F.Intrinsic.Control.CallSub(EnableScreen)
		F.Intrinsic.Control.UnBlockEvents()
		
		F.Intrinsic.Control.CallSub(Deserialize)
	
	F.Intrinsic.Control.Catch
	
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
		F.Intrinsic.UI.Msgbox(V.Global.sError)
		F.Intrinsic.Control.End()
		
	F.Intrinsic.Control.EndTry
	
Program.Sub.RefreshScreen.End

Program.Sub.EnableScreen.Start
	F.Intrinsic.Control.Try
	
		Gui.F_WO.GsGCWO.Visible(True)
		Gui.F_WO.framePermissions.Enabled(True)
		Gui.F_WO.cmdPrint.Enabled(True)
		
		F.Intrinsic.Control.If(V.Screen.F_WO!optEdit.Value, =, True)
			Gui.F_WO.cmdClose.Enabled(True)
			Gui.F_WO.cmdSave.Enabled(True)
			
		F.Intrinsic.Control.Else
			Gui.F_WO.cmdSave.Enabled(False)
			Gui.F_WO.cmdClose.Enabled(False)
			
		F.Intrinsic.Control.EndIf
		
		Gui.F_WO.lblStatus.Visible(False)
		Gui.F_WO.progressBarStatus.Visible(False)
	
	F.Intrinsic.Control.Catch
		
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
		F.Intrinsic.UI.Msgbox(V.Global.sError)
		F.Intrinsic.Control.End()
		
	F.Intrinsic.Control.EndTry
	
Program.Sub.EnableScreen.End

Program.Sub.DisableScreen.Start
	F.Intrinsic.Control.Try
	
		Gui.F_WO.GsGCWO.Visible(False)
		Gui.F_WO.framePermissions.Enabled(False)
		Gui.F_WO.cmdSave.Enabled(False)
		Gui.F_WO.cmdClose.Enabled(False)
		Gui.F_WO.cmdPrint.Enabled(False)
	
	F.Intrinsic.Control.Catch

		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
		F.Intrinsic.UI.Msgbox(V.Global.sError)
		F.Intrinsic.Control.End()
		
	F.Intrinsic.Control.EndTry
	
Program.Sub.DisableScreen.End

Program.Sub.Serialize.Start
	V.Local.sSerialize.Declare()
	
	F.Intrinsic.Control.Try
	
		' gvWOs
		Gui.F_WO.GsGCWO.Serialize("gvWOs", V.Local.sSerialize)
		F.Global.Registry.AddValue(V.Caller.User, V.Caller.CompanyCode, "gvWOs", 4135, 1000, False, "Serialize", False, 0, -999.0, 1/1/1980, 12:00:00 AM, V.Local.sSerialize)
		
		' gvMatl
		Gui.F_WO.GsGCWO.Serialize("gvMatl", V.Local.sSerialize)
		F.Global.Registry.AddValue(V.Caller.User, V.Caller.CompanyCode, "gvMatl", 4135, 1000, False, "Serialize", False, 0, -999.0, 1/1/1980, 12:00:00 AM, V.Local.sSerialize)
		
		' gvMatlPoLines
		Gui.F_WO.GsGCWO.Serialize("gvMatlPoLines", V.Local.sSerialize)
		F.Global.Registry.AddValue(V.Caller.User, V.Caller.CompanyCode, "gvMatlPoLines", 4135, 1000, False, "Serialize", False, 0, -999.0, 1/1/1980, 12:00:00 AM, V.Local.sSerialize)
		
		' gvLbr
		Gui.F_WO.GsGCWO.Serialize("gvLbr", V.Local.sSerialize)
		F.Global.Registry.AddValue(V.Caller.User, V.Caller.CompanyCode, "gvLbr", 4135, 1000, False, "Serialize", False, 0, -999.0, 1/1/1980, 12:00:00 AM, V.Local.sSerialize)
		
		' gvOut
		Gui.F_WO.GsGCWO.Serialize("gvOut", V.Local.sSerialize)
		F.Global.Registry.AddValue(V.Caller.User, V.Caller.CompanyCode, "gvOut", 4135, 1000, False, "Serialize", False, 0, -999.0, 1/1/1980, 12:00:00 AM, V.Local.sSerialize)
	
	F.Intrinsic.Control.Catch
	
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
		F.Intrinsic.UI.Msgbox(V.Global.sError)
		F.Intrinsic.Control.End()
		
	F.Intrinsic.Control.EndTry
	
Program.Sub.Serialize.End

Program.Sub.Deserialize.Start
	V.Local.sSerialize.Declare()

	F.Intrinsic.Control.Try
		
		' Delete old registry records
		F.Global.Registry.ReadValue(V.Caller.User, V.Caller.CompanyCode ,"gvWOs", 4135, 0, 5, "", V.Local.sSerialize)
		F.Intrinsic.Control.If(V.Local.sSerialize, <>, "")
			F.ODBC.Connection!common.OpenConnection(V.Ambient.Ccon, V.Ambient.Cuser, V.Ambient.Cpass)
			F.ODBC.Connection!common.Execute("Delete From Gs_Registry Where Reg_ID = 4135 And Seq < 1000;")
			F.ODBC.Connection!common.Close()
		F.Intrinsic.Control.EndIf
	
		' gvWOs
		F.Global.Registry.ReadValue(V.Caller.User, V.Caller.CompanyCode, "gvWOs", 4135, 1000, 6, "", V.Local.sSerialize)
		F.Intrinsic.Control.If(V.Local.sSerialize.Trim, <>, "")
			Gui.F_WO.GsGCWO.Deserialize(V.Local.sSerialize)
		F.Intrinsic.Control.EndIf
		
		' gvMatl
		F.Global.Registry.ReadValue(V.Caller.User, V.Caller.CompanyCode, "gvMatl", 4135, 1000, 6, "", V.Local.sSerialize)
		F.Intrinsic.Control.If(V.Local.sSerialize.Trim, <>, "")
			Gui.F_WO.GsGCWO.Deserialize(V.Local.sSerialize)
		F.Intrinsic.Control.EndIf
		
		' gvMatlPoLines
		F.Global.Registry.ReadValue(V.Caller.User, V.Caller.CompanyCode, "gvMatlPoLines", 4135, 1000, 6, "", V.Local.sSerialize)
		F.Intrinsic.Control.If(V.Local.sSerialize.Trim, <>, "")
			Gui.F_WO.GsGCWO.Deserialize(V.Local.sSerialize)
		F.Intrinsic.Control.EndIf
		
		' gvLbr
		F.Global.Registry.ReadValue(V.Caller.User, V.Caller.CompanyCode, "gvLbr", 4135, 1000, 6, "", V.Local.sSerialize)
		F.Intrinsic.Control.If(V.Local.sSerialize.Trim, <>, "")
			Gui.F_WO.GsGCWO.Deserialize(V.Local.sSerialize)
		F.Intrinsic.Control.EndIf
		
		' gvOut
		F.Global.Registry.ReadValue(V.Caller.User, V.Caller.CompanyCode, "gvOut", 4135, 1000, 6, "", V.Local.sSerialize)
		F.Intrinsic.Control.If(V.Local.sSerialize.Trim, <>, "")
			Gui.F_WO.GsGCWO.Deserialize(V.Local.sSerialize)
		F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
		
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
		F.Intrinsic.UI.Msgbox(V.Global.sError)
		F.Intrinsic.Control.End()
		
	F.Intrinsic.Control.EndTry
Program.Sub.Deserialize.End

Program.Sub.LoadDtDvWOs.Start
	V.Local.iCnt.Declare()
	V.Local.iProgress.Declare()
	V.Local.sSQL.Declare()
	V.Local.sRet.Declare()
	V.Local.sJob.Declare()
	V.Local.sSuffix.Declare()
	V.Local.sPrintedAndReleased.Declare()
	V.Local.fEstHrs.Declare()
	V.Local.fRemHrs.Declare()
	V.Local.fPcsRem.Declare()
	V.Local.sOper.Declare()
	V.Local.bDictExists.Declare()

	F.Intrinsic.Control.Try
		
		F.Intrinsic.Control.If(V.DataTable.dtWOs.Exists, =, True)
			F.Data.DataTable.Close("dtWOs")
			F.Data.Dictionary.Close("dicAmt_Cost")
			F.Data.Dictionary.Close("dicAmt_Price")
		F.Intrinsic.Control.EndIf
	
		F.Data.Dictionary.Exists("dIndirect", V.Local.bDictExists)
		F.Intrinsic.Control.If(V.Local.bDictExists, =, True)
			F.Data.Dictionary.Close("dIndirect")
		F.Intrinsic.Control.EndIf
		
		V.Global.bLoadData.Set(True)
		
		'This is the original method of data gathering -------------------------------------------------------------------------------------------------------------------------------------------
'		F.Intrinsic.Control.If(V.Caller.GSSVersion, =, "2016.1", OR, V.Caller.GSSVersion, =, "2016.2")
'		
'			V.Local.sPrintedAndReleased.Set("CASE When FLAG_WO_PRTD = 'Y' OR FLAG_WO_PRTD = 'R' THEN CONVERT(1,SQL_BIT) WHEN FLAG_WO_PRTD !='Y' Or Flag_WO_PRTD != 'R' Then convert(0,SQL_BIT) END AS PRINTED, CONVERT(CASE WHEN FLAG_WO_PRTD = 'Y' THEN 0 WHEN FLAG_WO_PRTD = 'X' THEN 1 WHEN FLAG_WO_PRTD = '' THEN 0 WHEN FLAG_WO_PRTD = 'R' THEN 1 END,SQL_BIT) AS RELEASED")
'			
'		F.Intrinsic.Control.Else
'		
'			V.Local.sPrintedAndReleased.Set("CONVERT(CASE WHEN FLAG_WO_PRTD = 'Y' THEN 1 WHEN FLAG_WO_PRTD = 'X' THEN 0 WHEN FLAG_WO_PRTD = '' THEN 0 WHEN FLAG_WO_PRTD = 'R' THEN 1 END,SQL_BIT) AS PRINTED, CASE WHEN A.FLAG_WO_RELEASED ='Y' THEN CONVERT(1,SQL_BIT) ELSE CONVERT (0, SQL_BIT) END AS RELEASED")
'			
'		F.Intrinsic.Control.EndIf
'		
'		F.Intrinsic.String.Build("SELECT '' AS Plusenta, {0}, A.JOB, A.SUFFIX, A.PROJECT, PHASE, DESCR, NAME_CUSTOMER, COALESCE(PART,'') AS PART, '' As DISPLAY_PART, LOCATION, PRODUCT_LINE, DESCRIPTION, DATE_START, DATE_DUE, CONVERT(0,SQL_FLOAT) AS EST_HRS, NUM_HOURS AS ACT_HRS, CONVERT(0,SQL_FLOAT) AS REM_HRS, '' AS OPER, QTY_ORDER, QTY_ORDER - QTY_COMPLETED AS PCS_REM, C.NOTES, CONCAT(A.JOB,A.SUFFIX) AS JS, CONVERT(0,SQL_BIT) AS IND_FLAG FROM V_JOB_HEADER A LEFT JOIN V_CUSTOMER_MASTER B ON A.CUSTOMER = B.CUSTOMER LEFT JOIN GAB_4135_WO_NOTES C ON A.JOB = C.JOB AND A.SUFFIX = C.SUFFIX LEFT JOIN PROJECT_MASTER D ON A.PROJECT = D.PROJECT WHERE A.DATE_CLOSED = '1900-1-1' ORDER BY DATE_DUE, A.JOB, A.SUFFIX;", V.Local.sPrintedAndReleased, V.Local.sSql)
'		F.Data.DataTable.CreateFromSQL("dtWOs", "con", V.Local.sSQL, True)
'		
'		F.Data.DataTable.AddDisplayPartColumn("dtWOs", 0, "PART", "DISPLAY_PART")
'		
'		Gui.F_WO.lblStatus.Visible(True)
'		Gui.F_WO.progressBarStatus.Visible(True)
'		Gui.F_WO.lblStatus.Caption("Loading Work Orders....")
'		Gui.F_WO.progressBarStatus.Min(0)
'		Gui.F_WO.progressBarStatus.Max(V.DataTable.dtWOs.RowCount)
'	
'		F.Intrinsic.Control.For(V.Local.iCnt, 0, V.DataTable.dtWOs.RowCount--, 1)
'		
'			F.Intrinsic.Math.Add(V.Local.iProgress, 1, V.Local.iProgress)
'			Gui.F_WO.progressBarStatus.Value(V.Local.iProgress)
'			
'			V.Local.sJob.Set(V.DataTable.dtWOs(V.Local.iCnt).JOB!FieldVal)
'			V.Local.sSuffix.Set(V.DataTable.dtWOs(V.Local.iCnt).SUFFIX!FieldVal)
'			
'			F.Intrinsic.String.Build("SELECT TOP 1 SEQTYPE, SEQRES, PCSREMAIN FROM APSV3_JBLINES WHERE COMPLDATE IS NULL AND JOB = '{0}' AND SFX = '{1}' ORDER BY JOB,SFX,SEQ;", V.Local.sJob, V.Local.sSuffix, V.Local.sSQL)
'			F.ODBC.Connection!con.OpenLocalRecordsetRO("rstInfo", V.Local.sSQL)
'				F.Intrinsic.Control.If(V.ODBC.con!rstInfo.EOF, =, True)
'					V.Local.sOper.Set("WipToFG")
'					V.Local.FPcsRem.Set(0)
'				F.Intrinsic.Control.Else
'					V.Local.sOper.Set(V.ODBC.con!rstInfo.FieldValTrim!SEQRES)
'					V.Local.fPcsRem.Set(V.ODBC.con!rstInfo.FieldValFloat!PCSREMAIN)
'				F.Intrinsic.Control.EndIf
'			F.ODBC.con!rstInfo.Close
'	
'			F.Intrinsic.String.Build("SELECT CONVERT(SUM(HOURSORIG + INITSU), SQL_NUMERIC) AS EST_HRS FROM APSV3_JBLINES WHERE SEQTYPE = '1' AND JOB = '{0}' AND SFX = '{1}' GROUP BY JOB,SFX;",V.Local.sJob,V.Local.sSuffix,V.Local.sSQL)
'			F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.fEstHrs)
'	
'			F.Intrinsic.Control.If(V.Local.fEstHrs, =, 0)
'				V.Local.fEstHrs.Set(0.0000)
'				V.Local.fRemHrs.Set(0.0000)
'			F.Intrinsic.Control.ElseIf(V.DataTable.dtWOs(V.Local.iCnt).ACT_HRS!FieldValFloat, >, V.Local.fEstHrs)
'				V.Local.fRemHrs.Set(0.0000)
'			F.Intrinsic.Control.Else
'				F.Intrinsic.Math.Sub(V.Local.fEstHrs, V.DataTable.dtWOs(V.Local.iCnt).ACT_HRS!FieldValFloat, V.Local.fRemHrs)
'			F.Intrinsic.Control.EndIf
'			
'			F.Intrinsic.Control.If(V.Local.sOper, =, "WipToFG")
'				V.Local.fRemHrs.Set(0.0000)
'			F.Intrinsic.Control.EndIf
'	
'			F.Data.DataTable.SetValue("dtWOs", V.Local.iCnt, "EST_HRS", V.Local.fEstHrs, "REM_HRS", V.Local.fRemHrs, "OPER", V.Local.sOper)

'		F.Intrinsic.Control.Next(V.Local.iCnt)
'		
'		' If a row's JS was found in IND_LBR_ACCTS, then remove it for being Indirect.
'		F.Data.Dictionary.CreateFromSQL("dIndirect", "con", "SELECT DISTINCT CONCAT(job, suffix) AS JS, CONVERT(IF('' = '', 1 ,0), SQL_BIT) FROM ind_lbr_accts;")
'		F.Data.Dictionary.SetDefaultReturn("dIndirect", False)
'		F.Data.DataTable.FillFromDictionary("dtWOs", "dIndirect", "JS", "IND_FLAG")
'		F.Data.DataView.Create("dtWOs", "dvWOs" ,22, "IND_FLAG <> True", "DATE_DUE ASC, JOB ASC, SUFFIX ASC")
		
		'------------------------------------------------------------------------------------------------------------------------------------------------------------------
		
		F.Data.DataTable.CreateFromSQL("dtFirst", "con", "Select Job, Suffix, Project, Phase, COALESCE(PART,'') AS PART, CONCAT(JOB,SUFFIX) AS JS, location, product_line, description, date_start, date_due, num_hours as ACT_HRS, qty_order, qty_completed, flag_wo_prtd, customer, Parent_WO, Parent_Suffix_Parent from V_JOB_HEADER where date_closed = '1900-01-01'", True)
		F.Data.DataTable.AddColumn("dtFirst", "Plusenta", "String", "")
		F.Data.DataTable.AddColumn("dtFirst", "DISPLAY_PART", "String", "")
		F.Data.DataTable.AddColumn("dtFirst", "PCS_REM_FILL", "String", "")
		F.Data.DataTable.AddColumn("dtFirst", "EST_HRS", "Float", 0)
'		F.Data.DataTable.AddColumn("dtFirst", "REM_HRS", "Float", 0)
		F.Data.DataTable.AddColumn("dtFirst", "OPER", "String", "")
		F.Data.DataTable.AddColumn("dtFirst", "Ind_Flag", "Boolean", False)
		F.Data.DataTable.AddColumn("dtFirst", "PRINTED", "Boolean", False)
		F.Data.DataTable.AddColumn("dtFirst", "SELECTED", "Boolean", False)
		F.Data.DataTable.AddColumn("dtFirst", "NAME_CUSTOMER", "String", "")
		F.Data.DataTable.AddColumn("dtFirst", "NOTES", "String", "")
		F.Data.DataTable.AddColumn("dtFirst", "DESCR", "String", "")
		F.Data.DataTable.AddColumn("dtFirst", "CURRSEQ", "String", "")
		
'		F.Data.DataTable.AddExpressionColumn("dtFirst", "JS", "String", "[JOB] + [SUFFIX]")
		F.Data.DataTable.AddExpressionColumn("dtFirst", "JdashS", "String", "[JOB] + '-' + [SUFFIX]")
		F.Data.DataTable.AddExpressionColumn("dtFirst", "PCS_REM", "Float", "[QTY_ORDER] - [QTY_COMPLETED]")
		
		'Filling in data from dictionaries. The customer name:
		F.Data.Dictionary.CreateFromSQL("dicCust", "con", "Select Customer, Name_Customer from V_CUSTOMER_MASTER")
		F.Data.Dictionary.SetDefaultReturn("dicCust", "")
		
		F.Data.DataTable.FillFromDictionary("dtFirst", "dicCust", "CUSTOMER", "NAME_CUSTOMER")
		
		F.Data.Dictionary.Close("dicCust")
		
		'Project Description
		F.Data.Dictionary.CreateFromSQL("dicProj", "con", "Select Project, Descr from Project_Master")
		F.Data.Dictionary.SetDefaultReturn("dicProj", "")
		
		F.Data.DataTable.FillFromDictionary("dtFirst", "dicProj", "Project ", "DESCR")
		
		F.Data.Dictionary.Close("dicProj")
		
		'Notes from teh custom table GAB_4135_WO_NOTES
		F.Data.Dictionary.CreateFromSQL("dicNotes", "Con", "Select CONCAT(JOB, SUFFIX), Notes from GAB_4135_WO_NOTES")
		F.Data.Dictionary.SetDefaultReturn("dicNotes", "")
		
		F.Data.DataTable.FillFromDictionary("dtFirst", "dicNotes", "JS", "NOTES")
		
		F.Data.Dictionary.Close("dicNotes")
		
		F.Data.Dictionary.Create("dicPrinted")
		F.Data.Dictionary.AddItem("dicPrinted", "Y", True)
		F.Data.Dictionary.AddItem("dicPrinted", "R", True)
		F.Data.Dictionary.SetDefaultReturn("dicPrinted", False)
		
		F.Data.DataTable.FillFromDictionary("dtFirst", "dicPrinted", "FLAG_WO_PRTD", "PRINTED")
		
		F.Data.Dictionary.Close("dicPrinted")
		
		'NOw we get to the fancy stuff. We are going to be creating a _HiGhLeE SuffPhEsTeCateDD_ dictionary for the current WC or whatever is stored in that one thing 
		
		'This is the base of the dictionary we will be using
		F.Data.DataTable.CreateFromSQL("dtAPS", "con", "Select Job, SFX, seq, SeqRes, PCSREMAIN from APSV3_JBLINES where COMPLDATE is NULL order by Job, SFX, SEQ", True)
		F.Data.DataTable.AddExpressionColumn("dtAPS", "JOBSFX", "String", "[JOB] + '-' + [SFX] + '-' + [Seq]")
		F.Data.DataTable.AddColumn("dtAPS", "SEQRIGHT", "String", "")
		F.Data.DataTable.AddColumn("dtAPS", "ESTHRS", "String", "")
		
		F.Data.DataTable.CreateFromSQL("dtForSEQ", "con", "select job + '-' + sfx as JOBSFX, min(seq) as Seq from APSV3_JBLINES where COMPLDATE is null group by job, sfx")
		
		F.Data.DataTable.AddExpressionColumn("dtForSEQ", "KeyValue", "String", "[JOBSFX] + '-' + [Seq]")
		F.Data.Dictionary.CreateFromDataTable("dicSEQ", "dtForSEQ", "KeyValue", "Seq")
		F.Data.Dictionary.SetDefaultReturn("dicSEQ", "-1")
		F.Data.DataTable.FillFromDictionary("dtAPS", "dicSEQ", "JOBSFX", "SEQRIGHT")
		
		F.Data.Dictionary.Close("dicSEQ")
		F.Data.DataTable.Close("dtForSEQ")
		
		F.Data.DataTable.AddExpressionColumn("dtAPS", "JdashS", "String", "[JOB] + '-' + [SFX]")
		F.Data.DataView.Create("dtAPS", "dvAPSSeqInfo", 22, "[SEQRIGHT] <> '-1'", "JOB ASC, SFX ASC")
		
		F.Data.Dictionary.CreateFromDataView("dicRealSeq", "dtAPS", "dvAPSSeqInfo", "JdashS", "SeqRight")
		F.Data.Dictionary.SetDefaultReturn("dicRealSeq", "")
		
		F.Data.DataTable.FillFromDictionary("dtFirst", "dicRealSeq", "JdashS", "CURRSEQ")
		
		F.Data.Dictionary.Close("dicRealSeq")
		
		F.Data.Dictionary.CreateFromDataView("dicSeqRes", "dtAPS", "dvAPSSeqInfo", "JdashS", "SeqRes")
		F.Data.Dictionary.SetDefaultReturn("dicseqres", "WIPtoFG")
		
		F.Data.DataTable.FillFromDictionary("dtFirst", "dicSeqRes", "JdashS", "OPER")
		
		F.Data.Dictionary.Close("dicSeqRes")
		
		F.Data.Dictionary.CreateFromDataView("dicPcs", "dtAPS", "dvAPSSeqInfo", "JdashS", "PCSREMAIN")
		F.Data.Dictionary.SetDefaultReturn("dicPcs", "0")
		
		F.Data.DataTable.FillFromDictionary("dtFirst", "dicPcs", "JdashS", "PCS_REM_FILL")
		
		F.Data.Dictionary.Close("dicPcs")
		F.Data.DataView.Close("dtAPS", "dvAPSSeqInfo")
		F.Data.DataTable.Close("dtAPS")
		
		F.Data.Dictionary.CreateFromSQL("dicEstHrs", "con", "SELECT job + '-' + sfx as JOBSFX, CONVERT(SUM(HOURSORIG + INITSU), SQL_NUMERIC) AS EST_HRS FROM APSV3_JBLINES WHERE SEQTYPE = '1' GROUP BY JOB,SFX")
		F.Data.Dictionary.SetDefaultReturn("dicEstHrs", "0")		
		F.Data.DataTable.FillFromDictionary("dtFirst", "dicEstHrs", "JdashS", "EST_HRS")
		
		F.Data.Dictionary.Close("dicEstHrs")
		
		F.Data.DataTable.AddDisplayPartColumn("dtFirst", 0, "PART", "DISPLAY_PART")
		
		F.Data.DataTable.AddExpressionColumn("dtFirst", "REM_HRS_PRE", "Float", "IIF([ACT_HRS]<[EST_HRS], [EST_HRS] - [ACT_HRS], 0.0000)")
		F.Data.DataTable.AddExpressionColumn("dtFirst", "REM_HRS", "Float", "IIF([OPER]='WipToFG', 0.0000, REM_HRS_PRE)")
		
		' If a row's JS was found in IND_LBR_ACCTS, then remove it for being Indirect.
		F.Data.Dictionary.CreateFromSQL("dicIndirect", "con", "SELECT DISTINCT CONCAT(job, suffix) AS JS, CONVERT(IF('' = '', 1 ,0), SQL_BIT) FROM ind_lbr_accts;")
		F.Data.Dictionary.SetDefaultReturn("dicIndirect", False)
		F.Data.DataTable.FillFromDictionary("dtFirst", "dicIndirect", "JS", "IND_FLAG")
		
		F.Data.Dictionary.Close("dicIndirect")
		
		F.Data.DataView.Create("dtFirst", "dvParentWO" ,22, "[IND_FLAG] <> True and SUFFIX = '000'", "DATE_DUE ASC, JOB ASC, SUFFIX ASC")
		
		F.Data.DataView.ToDataTable("dtFirst", "dvParentWO", "dtWOs", True)
		
		F.Data.DataView.Create("dtWOs", "dvWOs")
		
		'This table is for the material sequences of the parent work orders. The user is able to modify the quantity on WO on the material sequences for inventory that is flagged as Manufacture to Job
		'When they do so, we are either going to update the inventory quantity an existing work order 
		
		F.Data.DataTable.Create("dtCloseWOUpdates", True)
		F.Data.DataTable.AddColumn("dtCloseWOUpdates", "Part", String)
		F.Data.DataTable.AddColumn("dtCloseWOUpdates", "Location", String)
		F.Data.DataTable.AddColumn("dtCloseWOUpdates", "WorkOrder", String)
		F.Data.DataTable.AddColumn("dtCloseWOUpdates", "WorkOrderSuffix", String)
		F.Data.DataTable.AddColumn("dtCloseWOUpdates", "NewQuantity", Float)
		F.Data.DataTable.AddColumn("dtCloseWOUpdates", "OrderDueDate", String)
		
	F.Intrinsic.Control.Catch
	
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
		F.Intrinsic.UI.Msgbox(V.Global.sError)
		F.Intrinsic.Control.End()
		
	F.Intrinsic.Control.EndTry
	
Program.Sub.LoadDtDvWOs.End

Program.Sub.LoadGvWOs.Start
	F.Intrinsic.Control.Try
		
'		Gui.F_WO.GsGCWO.AddGridViewFromDataView("gvWOs", "dtWOs", "dvWOs")
		Gui.F_WO.GsGCWO.AddGridviewFromDataview("gvWOs", "dtWOs", "dvWOs")
		Gui.F_WO.GsGCWO.MainView("gvWOs")
		
'		Gui.F_WO.GsGCWO.SuspendLayout()
		
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvWOs", "MultiSelect", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvWOs", "AllowSort", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvWOs", "AllowFilter", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvWOs", "OptionsDetailShowDetailTabs", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvWOs", "OptionsViewShowGroupPanel", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvWOs", "EnableAppearanceOddRow", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvWOs", "OptionsMenuShowAutoFilterRowItem", False)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvWOs", "EnterKeyNavigation", "Horizontal")
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "JS", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "IND_FLAG", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PART", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "QTY_COMPLETED", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "FLAG_WO_PRTD", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "CUSTOMER", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PCS_REM_FILL", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "CURRSEQ", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "JDASHS", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "REM_HRS_PRE", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "Parent_WO", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "Parent_Suffix_Parent", "Visible", False)
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "Plusenta", "ShowCaption", False)
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PRINTED", "Caption", "Printed ")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "SELECTED", "Caption", "Selected ")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "JOB", "Caption", "Job ")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "SUFFIX", "Caption", "Suffix ")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PROJECT", "Caption", "Project ")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PHASE", "Caption", "Phase ")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "DESCR", "Caption", "Project Description")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "NAME_CUSTOMER", "Caption", "Cust. Name")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "DISPLAY_PART", "Caption", "Part ")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "LOCATION", "Caption", "Loc")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PRODUCT_LINE", "Caption", "PL")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "DESCRIPTION", "Caption", "Description ")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "DATE_START", "Caption", "Start Date")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "DATE_DUE", "Caption", "Due Date")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "EST_HRS", "Caption", "Est. Hrs.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "ACT_HRS", "Caption", "Act. Hrs.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "REM_HRS", "Caption", "Rem. Hrs.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "OPER", "Caption", "Current Operation")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "QTY_ORDER", "Caption", "Order Qty.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PCS_REM", "Caption", "Pcs. Rem.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "NOTES", "Caption", "Notes ")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "Plusenta", "Width", 0)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PRINTED", "MinWidth", 25)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "SELECTED", "MinWidth", 25)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "JOB", "MinWidth", 50)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "SUFFIX", "MinWidth", 25)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PROJECT", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PHASE", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "DESCR", "MinWidth", 200)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "NAME_CUSTOMER", "MinWidth", 200)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "DISPLAY_PART", "MinWidth", 150)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "LOCATION", "MinWidth", 35)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PRODUCT_LINE", "MinWidth", 35)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "DESCRIPTION", "MinWidth", 200)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "DATE_START", "MinWidth", 100)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "DATE_DUE", "MinWidth", 100)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "EST_HRS", "MinWidth", 95)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "ACT_HRS", "MinWidth", 95)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "REM_HRS", "MinWidth", 95)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "OPER", "MinWidth", 200)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "QTY_ORDER"," MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PCS_REM", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "NOTES", "MinWidth", 300)
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "Plusenta", "VisibleIndex", 1)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PRINTED", "VisibleIndex", 2)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "SELECTED", "VisibleIndex", 3)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "JOB", "VisibleIndex", 4)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "SUFFIX", "VisibleIndex", 5)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PROJECT", "VisibleIndex", 6)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PHASE", "VisibleIndex", 7)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "DESCR", "VisibleIndex", 8)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "NAME_CUSTOMER", "VisibleIndex", 9)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "DISPLAY_PART", "VisibleIndex", 10)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "LOCATION", "VisibleIndex", 11)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PRODUCT_LINE", "VisibleIndex", 12)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "DESCRIPTION", "VisibleIndex", 13)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "DATE_START", "VisibleIndex", 14)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "DATE_DUE", "VisibleIndex", 15)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "EST_HRS", "VisibleIndex", 16)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "ACT_HRS", "VisibleIndex", 17)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "REM_HRS", "VisibleIndex", 18)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "OPER", "VisibleIndex", 19)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "QTY_ORDER"," VisibleIndex", 20)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PCS_REM", "VisibleIndex", 21)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "NOTES", "VisibleIndex", 22)
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PRINTED", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "SELECTED", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "JOB", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "SUFFIX", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "LOCATION", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PRODUCT_LINE", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "DATE_START", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "DATE_DUE", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "EST_HRS", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "ACT_HRS", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "REM_HRS", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "QTY_ORDER", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PCS_REM", "HeaderHAlignment", "Center")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PRINTED", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "SELECTED", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "JOB", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "SUFFIX", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "LOCATION", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PRODUCT_LINE", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "DATE_START", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "DATE_DUE", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "EST_HRS", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "ACT_HRS", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "REM_HRS", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "QTY_ORDER", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PCS_REM", "CellHAlignment", "Center")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "Plusenta", "Fixed", "Left")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PRINTED", "Fixed", "Left")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "SELECTED", "Fixed", "Left")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "JOB", "Fixed", "Left")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "SUFFIX", "Fixed", "Left")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PROJECT", "Fixed", "Left")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PHASE", "Fixed", "Left")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PRINTED", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "SELECTED", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "JOB", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "SUFFIX", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PROJECT", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PHASE", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "DESCR", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "NAME_CUSTOMER", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "DISPLAY_PART", "ReadOnly" ,True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "LOCATION", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PRODUCT_LINE", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "DESCRIPTION", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "DATE_START", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "DATE_DUE", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "EST_HRS", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "ACT_HRS", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "REM_HRS", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "OPER", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "QTY_ORDER", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PCS_REM", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "NOTES", "ReadOnly", False)
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PRINTED", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "SELECTED", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "JOB", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "SUFFIX", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PROJECT", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PHASE", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "DESCR", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "NAME_CUSTOMER", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "DISPLAY_PART", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "LOCATION", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PRODUCT_LINE", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "DESCRIPTION", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "DATE_START", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "DATE_DUE", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "EST_HRS", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "ACT_HRS", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "REM_HRS", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "OPER", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "QTY_ORDER", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PCS_REM", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "NOTES", "AllowEdit", True)
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "NOTES", "CellBackColor", "LightYellow")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "JOB", "CellForeColor", "Blue")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "SUFFIX", "CellForeColor", "Blue")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "DISPLAY_PART", "CellForeColor", "Blue")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "LOCATION", "CellForeColor", "Blue")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "DATE_START", "DisplayCustomDatetime", "d")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "DATE_DUE", "DisplayCustomDatetime", "d")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "EST_HRS", "DisplayCustomNumeric", n2)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "ACT_HRS", "DisplayCustomNumeric", n2)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "REM_HRS", "DisplayCustomNumeric", n2)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "QTY_ORDER", "DisplayCustomNumeric", n2)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "PCS_REM", "DisplayCustomNumeric", n2)
		
		Gui.F_WO.GsGCWO.AddSummaryItem("gvWOs", "EST_HRS", "EST_HRS", "SUM", "Total: ", "", n2)
		Gui.F_WO.GsGCWO.AddSummaryItem("gvWOs", "ACT_HRS", "ACT_HRS", "SUM", "Total: ", "", n2)
		Gui.F_WO.GsGCWO.AddSummaryItem("gvWOs", "REM_HRS", "REM_HRS", "SUM", "Total: ", "", n2)
		
		F.Intrinsic.Control.If(V.Global.bLongPart)
			Gui.F_WO.GsGCWO.SetColumnProperty("gvWOs", "DISPLAY_PART", "MinWidth", "250")
		F.Intrinsic.Control.EndIf
		
		'Now we can create the child datatable for the children, obvs
		
		F.Data.DataTable.AddExpressionColumn("dtFirst", "NOTES_CHILD", "String", "[NOTES]")
		F.Data.DataView.Create("dtFirst", "dvChildWO" ,22, "[IND_FLAG] <> True and SUFFIX <> '000'", "DATE_DUE ASC, JOB ASC, SUFFIX ASC")
		F.Data.DataView.ToDataTable("dtFirst", "dvChildWO", "dtChildren", True)
		
		F.Data.Dictionary.CreateFromDataView("dicChild", "dtWOs", "dvWOs", "JOB", "JOB")
		F.Data.Dictionary.SetDefaultReturn("dicChild", "-1")
		
		F.Data.DataTable.AddColumn("dtChildren", "ParentFilter", "String")
		F.Data.DataTable.FillFromDictionary("dtChildren", "dicChild", "Job", "ParentFilter")
		
		F.Data.Dictionary.Close("dicChild")
		
		F.Data.DataView.Create("dtChildren", "dvChildrenWO", 22, "[ParentFilter] <> '-1'", "")
		
		F.Data.DataTable.AddExpressionColumn("dtChildren", "JobChild", "String", "[JOB]")
		F.Data.DataTable.AddExpressionColumn("dtChildren", "SuffixChild", "String", "[SUFFIX]")
		F.Data.DataTable.AddExpressionColumn("dtChildren", "Display_PartChild", "String", "[DISPLAY_PART]")
		F.Data.DataTable.AddExpressionColumn("dtChildren", "LOCATIONCHILD", "String", "[LOCATION]")
		
		F.Data.DataView.ToDataTable("dtChildren", "dvChildrenWO", "dtWOs$dtChildren", True)
		
		F.Data.DataView.Close("dtChildren", "dvChildrenWO")
		F.Data.DataTable.Close("dtChildren")
		
		F.Data.DataTable.AddRelation("dtWOs", "JOB", "dtWOs$dtChildren", "JOB", "Children")
		
		F.Data.DataView.Create("dtWOs$dtChildren", "dvChild", 22, "", "JOB ASC, SUFFIX ASC")
		Gui.F_WO.GsGCWO.AddGridViewFromDataView("gvChildWOs", "dtWOs", "dvChild")
		
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildWOs", "MultiSelect", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildWOs", "AllowSort", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildWOs", "AllowFilter", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildWOs", "OptionsDetailShowDetailTabs", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildWOs", "OptionsViewShowGroupPanel", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildWOs", "EnableAppearanceOddRow", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildWOs", "OptionsMenuShowAutoFilterRowItem", False)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildWOs", "EnterKeyNavigation", "Horizontal")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "JS", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "IND_FLAG", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PART", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "QTY_COMPLETED", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "FLAG_WO_PRTD", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "CUSTOMER", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PCS_REM_FILL", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "CURRSEQ", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "JDASHS", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "REM_HRS_PRE", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PRINTED", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "SELECTED", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PARENTFILTER", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "Parent_WO", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "Parent_Suffix_Parent", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "NOTES", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "JOB", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "SUFFIX", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "DISPLAY_PART", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "LOCATION", "Visible", False)
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "Plusenta", "ShowCaption", False)
	
'		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PRINTED", "Caption", "Printed")
'		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "SELECTED", "Caption", "Selected")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "JobChild", "Caption", "Job ")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "SuffixChild", "Caption", "Suffix ")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PROJECT", "Caption", "Project ")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PHASE", "Caption", "Phase ")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "DESCR", "Caption", "Project Description")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "NAME_CUSTOMER", "Caption", "Cust. Name")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "Display_PartChild", "Caption", "Part ")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "LOCATIONCHILD", "Caption", "Loc")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PRODUCT_LINE", "Caption", "PL")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "DESCRIPTION", "Caption", "Description ")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "DATE_START", "Caption", "Start Date")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "DATE_DUE", "Caption", "Due Date")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "EST_HRS", "Caption", "Est. Hrs.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "ACT_HRS", "Caption", "Act. Hrs.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "REM_HRS", "Caption", "Rem. Hrs.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "OPER", "Caption", "Current Operation")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "QTY_ORDER", "Caption", "Order Qty.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PCS_REM", "Caption", "Pcs. Rem.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "NOTES_CHILD", "Caption", "Notes ")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "Plusenta", "Width", 0)
'		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PRINTED", "MinWidth", 25)
'		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "SELECTED", "MinWidth", 25)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "JobChild", "MinWidth", 50)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "SuffixChild", "MinWidth", 25)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PROJECT", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PHASE", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "DESCR", "MinWidth", 200)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "NAME_CUSTOMER", "MinWidth", 200)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "Display_PartChild", "MinWidth", 150)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "LOCATIONCHILD", "MinWidth", 35)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PRODUCT_LINE", "MinWidth", 35)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "DESCRIPTION", "MinWidth", 200)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "DATE_START", "MinWidth", 100)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "DATE_DUE", "MinWidth", 100)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "EST_HRS", "MinWidth", 95)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "ACT_HRS", "MinWidth", 95)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "REM_HRS", "MinWidth", 95)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "OPER", "MinWidth", 200)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "QTY_ORDER"," MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PCS_REM", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "NOTES_CHILD", "MinWidth", 300)
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "Plusenta", "VisibleIndex", 1)
'		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PRINTED", "VisibleIndex", 2)
'		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "SELECTED", "VisibleIndex", 3)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "JobChild", "VisibleIndex", 2)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "SuffixChild", "VisibleIndex", 3)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PROJECT", "VisibleIndex", 4)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PHASE", "VisibleIndex", 5)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "DESCR", "VisibleIndex", 6)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "NAME_CUSTOMER", "VisibleIndex", 7)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "Display_PartChild", "VisibleIndex", 8)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "LOCATIONCHILD", "VisibleIndex", 9)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PRODUCT_LINE", "VisibleIndex", 10)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "DESCRIPTION", "VisibleIndex", 11)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "DATE_START", "VisibleIndex", 12)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "DATE_DUE", "VisibleIndex", 13)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "EST_HRS", "VisibleIndex", 14)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "ACT_HRS", "VisibleIndex", 15)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "REM_HRS", "VisibleIndex", 16)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "OPER", "VisibleIndex", 17)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "QTY_ORDER"," VisibleIndex", 18)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PCS_REM", "VisibleIndex", 19)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "NOTES_CHILD", "VisibleIndex", 20)
	
'		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PRINTED", "HeaderHAlignment", "Center")
'		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "SELECTED", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "JobChild", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "SuffixChild", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "LOCATIONCHILD", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PRODUCT_LINE", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "DATE_START", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "DATE_DUE", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "EST_HRS", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "ACT_HRS", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "REM_HRS", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "QTY_ORDER", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PCS_REM", "HeaderHAlignment", "Center")
	
'		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PRINTED", "CellHAlignment", "Center")
'		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "SELECTED", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "JobChild", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "SuffixChild", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "LOCATIONCHILD", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PRODUCT_LINE", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "DATE_START", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "DATE_DUE", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "EST_HRS", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "ACT_HRS", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "REM_HRS", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "QTY_ORDER", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PCS_REM", "CellHAlignment", "Center")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "Plusenta", "Fixed", "Left")
'		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PRINTED", "Fixed", "Left")
'		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "SELECTED", "Fixed", "Left")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "JobChild", "Fixed", "Left")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "SuffixChild", "Fixed", "Left")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PROJECT", "Fixed", "Left")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PHASE", "Fixed", "Left")
	
'		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PRINTED", "ReadOnly", True)
'		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "SELECTED", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "JobChild", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "SuffixChild", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PROJECT", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PHASE", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "DESCR", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "NAME_CUSTOMER", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "Display_PartChild", "ReadOnly" ,True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "LOCATIONCHILD", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PRODUCT_LINE", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "DESCRIPTION", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "DATE_START", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "DATE_DUE", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "EST_HRS", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "ACT_HRS", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "REM_HRS", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "OPER", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "QTY_ORDER", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PCS_REM", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "NOTES_CHILD", "ReadOnly", False)
	
'		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PRINTED", "AllowEdit", False)
'		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "SELECTED", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "JobChild", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "SuffixChild", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PROJECT", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PHASE", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "DESCR", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "NAME_CUSTOMER", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "Display_PartChild", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "LOCATIONCHILD", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PRODUCT_LINE", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "DESCRIPTION", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "DATE_START", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "DATE_DUE", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "EST_HRS", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "ACT_HRS", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "REM_HRS", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "OPER", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "QTY_ORDER", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PCS_REM", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "NOTES_CHILD", "AllowEdit", True)
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "NOTES_CHILD", "CellBackColor", "LightYellow")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "JobChild", "CellForeColor", "Blue")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "SuffixChild", "CellForeColor", "Blue")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "Display_PartChild", "CellForeColor", "Blue")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "LOCATIONCHILD", "CellForeColor", "Blue")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "DATE_START", "DisplayCustomDatetime", "d")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "DATE_DUE", "DisplayCustomDatetime", "d")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "EST_HRS", "DisplayCustomNumeric", n2)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "ACT_HRS", "DisplayCustomNumeric", n2)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "REM_HRS", "DisplayCustomNumeric", n2)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "QTY_ORDER", "DisplayCustomNumeric", n2)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildWOs", "PCS_REM", "DisplayCustomNumeric", n2)
		
'		Gui.F_WO.GsGCWO.AddSummaryItem("gvChildWOs", "EST_HRS", "EST_HRS", "SUM", "Total: ", "", n2)
'		Gui.F_WO.GsGCWO.AddSummaryItem("gvChildWOs", "ACT_HRS", "ACT_HRS", "SUM", "Total: ", "", n2)
'		Gui.F_WO.GsGCWO.AddSummaryItem("gvChildWOs", "REM_HRS", "REM_HRS", "SUM", "Total: ", "", n2)
		
	F.Intrinsic.Control.Catch
		
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
		F.Intrinsic.UI.Msgbox(V.Global.sError)
		F.Intrinsic.Control.End()
		
	F.Intrinsic.Control.EndTry
Program.Sub.LoadGvWOs.End

Program.Sub.LoadDtDvGvMatl.Start
	V.Local.i.Declare()

	F.Intrinsic.Control.Try
	
		' Previous query.
		' 	V_PO_LINES join is the thing that seemed to make some customers time out before the dashboard could load. There is a similar join in LoadDtDvGvOut.
		
'		F.Data.DataTable.CreateFromSQL("ddddtMatl","con","SELECT DISTINCT CONCAT(A.JOB,A.SUFFIX) AS JBSF,CONCAT(CONCAT(A.JOB,A.SUFFIX),A.SEQ) AS JSS,A.JOB AS JOB1,A.SUFFIX AS SFX1,A.SEQ AS SEQ1,COALESCE(A.PART,'') AS PART1,'' As DISPLAY_PART1,C.LOCATION AS LOCATION1,A.DESCRIPTION AS DESCR,E.VENDOR,E.PURCHASE_ORDER,LEFT(E.RECORD_NO,3) AS LINE,IF(E.DATE_DUE_LINE = '1900-1-1',NULL,E.DATE_DUE_LINE) AS DATE_DUE_LINE,D.AMT_COST,B.PCSTOPROD,B.PCSCOMPL,B.PCSREMAIN,IF(D.QTY_ONHAND IS NULL,'0.0000',D.QTY_ONHAND) AS QTY_ONHAND,IF(D.QTY_ONORDER_PO IS NULL,'0.0000',D.QTY_ONORDER_PO) AS QTY_ONORDER_PO,IF(D.QTY_ONORDER_WO IS NULL,'0.0000',D.QTY_ONORDER_WO) AS QTY_ONORDER_WO,IF(D.QTY_REQUIRED IS NULL,'0.0000',D.QTY_REQUIRED) AS QTY_REQUIRED FROM JOB_OPERATIONS A LEFT JOIN APSV3_JBLINES B ON JSS = B.JSS LEFT JOIN JOB_HEADER C ON A.JOB = C.JOB AND A.SUFFIX = C.SUFFIX LEFT JOIN INVENTORY_MSTR D ON A.PART = D.PART AND C.LOCATION = D.LOCATION LEFT JOIN V_PO_LINES E ON A.JOB = E.JOB AND A.SUFFIX = E.SUFFIX AND A.SEQ = E.SEQUENCE WHERE A.LMO = 'M' AND A.SEQ NOT IN ('995000','998000') AND JBSF IN (SELECT CONCAT(JOB,SUFFIX) AS JBSFX FROM V_JOB_HEADER WHERE DATE_CLOSED = '1900-1-1') ORDER BY SEQ1;",True)
		
		' New query.
		'	Delete V_PO_LINES join to eliminate timeout. Add it later as a subgrid, especially when (in rare cases) a customer may have multiple PoLines for a single Sequence.
		'	Add new join for V_INVENTORY_COST to grab its COST column to replace INVENTORY_MSTR.AMT_COST since that one is obsolete.
		'	Changed IF(... IS NULL) to ISNULL().
		'	Explicitly CAST qty values to DOUBLE.
		'	ORDER BY jss instead for actually correct row coloring.
		'	Aliases renamed for readability.
		
'		F.Data.DataTable.CreateFromSQL("ddddtMatl", "con", "SELECT DISTINCT CONCAT(A.job, A.suffix) AS Matl_JS, CONCAT(CONCAT(A.job, A.suffix), A.seq) AS Matl_JSS, A.job AS Matl_Job, A.suffix AS Matl_Suffix, A.seq AS Matl_Sequence, COALESCE(A.part, '') AS Matl_Part, '' As Matl_DisplayPart, C.location AS Matl_Location, A.description AS Matl_Description, CAST(ISNULL(E.cost, 0.0) AS DOUBLE) AS Matl_InvCost, CAST(ISNULL(B.pcstoprod, 0.0) AS DOUBLE) AS Matl_ApsPcsToProd, CAST(ISNULL(B.pcscompl, 0.0) AS DOUBLE) AS Matl_ApsPcsCompl, CAST(ISNULL(B.pcsremain, 0.0) AS DOUBLE) AS Matl_ApsPcsRemain, CAST(ISNULL(D.qty_onHand, 0.0) AS DOUBLE) AS Matl_InvQtyOnHand, ISNULL(D.qty_onorder_po, 0.0) AS Matl_InvQtyOnOrderPo, CAST(ISNULL(D.qty_onorder_wo, 0.0) AS DOUBLE) AS Matl_InvQtyOnOrderWo, CAST(ISNULL(D.qty_required, 0.0) AS DOUBLE) AS Matl_InvQtyRequired FROM job_operations A LEFT JOIN apsv3_jblines B ON Matl_JSS = B.JSS LEFT JOIN job_header C ON A.job = C.job AND A.suffix = C.suffix LEFT JOIN inventory_mstr D ON A.part = D.part AND C.location = D.location LEFT JOIN v_inventory_cost E ON A.part = E.part AND E.locn = C.Location WHERE A.LMO = 'M' AND A.seq NOT IN ('995000', '998000') AND Matl_JS IN (SELECT CONCAT(job, suffix) AS JBSFX FROM v_job_header WHERE date_closed = '1900-01-01') ORDER BY A.job, A.suffix, A.seq;", True)
		
		F.Data.DataTable.CreateFromSQL("dtFirstIteration", "con", "Select Distinct Concat(Job, Suffix) as MATL_JS, CONCAT(CONCAT(JOB, SUFFIX), SEQ) as MATL_JSS, JOB as MATL_JOB, SUFFIX as MATL_SUFFIX, SEQ as MATL_SEQUENCE, COALESCE(PART, '') as MATL_PART, DESCRIPTION as MATL_DESCRIPTION, date_due as Matl_Date_Due From JOB_OPERATIONS where LMO = 'M' AND SEQ NOT IN ('995000', '998000')", True)
		
		F.Data.DataTable.AddColumn("dtFirstIteration", "Matl_DisplayPart", "String")
		F.Data.DataTable.AddColumn("dtFirstIteration", "Matl_Location", "String")
		F.Data.DataTable.AddColumn("dtFirstIteration", "Matl_InvCost", "Float")
		F.Data.DataTable.AddColumn("dtFirstIteration", "Matl_ApsPcsToProd", "Float")
		F.Data.DataTable.AddColumn("dtFirstIteration", "Matl_ApsPcsCompl", "Float")
		F.Data.DataTable.AddColumn("dtFirstIteration", "Matl_ApsPcsRemain", "Float")
		F.Data.DataTable.AddColumn("dtFirstIteration", "Matl_InvQtyOnHand", "Float")
		F.Data.DataTable.AddColumn("dtFirstIteration", "Matl_InvQtyOnOrderPo", "Float")
		F.Data.DataTable.AddColumn("dtFirstIteration", "Matl_InvQtyOnOrderWo", "Float")
		F.Data.DataTable.AddColumn("dtFirstIteration", "Matl_InvQtyRequired", "Float")
		F.Data.DataTable.AddColumn("dtFirstIteration", "ManToJob_Parent", "String")
		F.Data.DataTable.AddColumn("dtFirstIteration", "ManToJob_Suffix", "String")
		F.Data.DataTable.AddColumn("dtFirstIteration", "ManToJob_Qty", "Float")
		F.Data.DataTable.AddColumn("dtFirstIteration", "ManToJob_DueDate", "String")
		
'		F.Data.DataTable.AddDisplayPartColumn("dtFirstIteration", 0, "Matl_Part", "Matl_DisplayPart")
		
		F.Data.Dictionary.CreateFromSQL("dicMatlLoc", "con", "Select Concat(job, Suffix), Location from V_JOB_HEADER")
		F.Data.Dictionary.SetDefaultReturn("dicMatlLoc", "")
		
		F.Data.DataTable.FillFromDictionary("dtFirstIteration", "dicMatlLoc", "Matl_JS", "Matl_Location")
		
		F.Data.Dictionary.Close("dicMatlLoc")
		
		F.Data.DataTable.CreateFromSQL("dtPcsStuff", "con", "Select JSS, PCSTOPROD, PCSCOMPL, PCSREMAIN from APSV3_JBLINES", True)
		
		F.Data.Dictionary.CreateFromDataTable("dicPcsToProd", "dtPcsStuff", "JSS", "PCSTOPROD")
		F.Data.Dictionary.SetDefaultReturn("dicPcsToProd", "0.0000")
		
		F.Data.DataTable.FillFromDictionary("dtFirstIteration", "dicPcsToProd", "Matl_JS", "Matl_ApsPcsToProd")
		
		F.Data.Dictionary.Close("dicPcsToProd")
		
		F.Data.Dictionary.CreateFromDataTable("dicPcsCompl", "dtPcsStuff", "JSS", "PCSCOMPL")
		F.Data.Dictionary.SetDefaultReturn("dicPcsCompl", "0.0000")
		
		F.Data.DataTable.FillFromDictionary("dtFirstIteration", "dicPcsCompl", "Matl_JS", "Matl_ApsPcsCompl")
		
		F.Data.Dictionary.Close("dicPcsCompl")
		
		F.Data.Dictionary.CreateFromDataTable("dicPcsRemain", "dtPcsStuff", "JSS", "PCSREMAIN")
		F.Data.Dictionary.SetDefaultReturn("dicPcsRemain", "0.0000")
		
		F.Data.DataTable.FillFromDictionary("dtFirstIteration", "dicPcsRemain", "Matl_JS", "Matl_ApsPcsRemain")
		
		F.Data.Dictionary.Close("dicPcsRemain")
		
		F.Data.DataTable.Close("dtPcsStuff")
		
		F.Data.DataTable.CreateFromSQL("dtInveInfo", "con", "Select PART, LOCATION, QTY_ONHAND, QTY_ONORDER_PO, QTY_ONORDER_WO, QTY_REQUIRED, AMT_COST, AMT_PRICE from INVENTORY_MSTR")
		
		F.Data.DataTable.AddExpressionColumn("dtFirstIteration", "PartLoc", "String", "[Matl_Part]+[Matl_Location]")
		
		F.Data.DataTable.AddExpressionColumn("dtInveInfo", "PartLoc", "String", "[PART]+[LOCATION]")
		
		F.Data.Dictionary.CreateFromDataTable("dicQtyOnHand", "dtInveInfo", "PartLoc", "QTY_ONHAND")
		F.Data.Dictionary.SetDefaultReturn("dicQtyOnHand", "0.0000")
		
		F.Data.DataTable.FillFromDictionary("dtFirstIteration", "dicQtyOnHand", "PartLoc", "Matl_InvQtyOnHand")
		
		F.Data.Dictionary.Close("dicQtyOnHand")
		
		F.Data.Dictionary.CreateFromDataTable("dicQtyOnOrdPO", "dtInveInfo", "PartLoc", "QTY_ONORDER_PO")
		F.Data.Dictionary.SetDefaultReturn("dicQtyOnOrdPO", "0.0000")
		
		F.Data.DataTable.FillFromDictionary("dtFirstIteration", "dicQtyOnOrdPO", "PartLoc", "Matl_InvQtyOnOrderPo")
		
		F.Data.Dictionary.Close("dicQtyOnOrdPO")
		
		F.Data.Dictionary.CreateFromDataTable("dicQtyOnOrdWO", "dtInveInfo", "PartLoc", "QTY_ONORDER_WO")
		F.Data.Dictionary.SetDefaultReturn("dicQtyOnOrdWO", "0.0000")
		
		F.Data.DataTable.FillFromDictionary("dtFirstIteration", "dicQtyOnOrdWO", "PartLoc", "Matl_InvQtyOnOrderWo")
		
		F.Data.Dictionary.Close("dicQtyOnOrdWO")
		
		F.Data.Dictionary.CreateFromDataTable("dicQtyReqd", "dtInveInfo", "PartLoc", "QTY_REQUIRED")
		F.Data.Dictionary.SetDefaultReturn("dicQtyReqd", "0.0000")
		
		F.Data.DataTable.FillFromDictionary("dtFirstIteration", "dicQtyReqd", "PartLoc", "Matl_InvQtyRequired")
		
		F.Data.Dictionary.Close("dicQtyReqd")
		
		'These dictionaries are going to be created to be used at the time of WIP to FG
		F.Data.Dictionary.CreateFromDataTable("dicAmt_Cost", "dtInveInfo", "PartLoc", "AMT_COST")
		F.Data.Dictionary.SetDefaultReturn("dicAmt_Cost", "0.0000")
		
		F.Data.Dictionary.CreateFromDataTable("dicAmt_Price", "dtInveInfo", "PartLoc", "AMT_PRICE")
		F.Data.Dictionary.SetDefaultReturn("dicAmt_Price", "0.0000")
		
		F.Data.DataTable.Close("dtInveInfo")
				
		'This is to associate the material sequences to their job..
		F.Data.DataTable.AddExpressionColumn("dtFirst", "MJPartLoc", "String", "[Part] + [Location]")
		
		'Now we do the same for the material table...
		F.Data.DataTable.AddExpressionColumn("dtFirstIteration", "KeyFieldForMJ", "String", "[MATL_PART] + [Matl_Location]")
		
		F.Data.Dictionary.CreateFromDataTable("dicMJWO", "dtFirst", "MJPartLoc", "Job")
		F.Data.Dictionary.SetDefaultReturn("dicMJWO", "")
		F.Data.DataTable.FillFromDictionary("dtFirstIteration", "dicMJWO", "KeyFieldForMJ", "ManToJob_Parent")
		F.Data.Dictionary.Close("dicMJWO")
		
		F.Data.Dictionary.CreateFromDataTable("dicMJSuff", "dtFirst", "MJPartLoc", "Suffix")
		F.Data.Dictionary.SetDefaultReturn("dicMJSuff", "")
		F.Data.DataTable.FillFromDictionary("dtFirstIteration", "dicMJSuff", "KeyFieldForMJ", "ManToJob_Suffix")
		F.Data.Dictionary.Close("dicMJSuff")
		
		F.Data.Dictionary.CreateFromDataTable("dicMJQty", "dtFirst", "MJPartLoc", "Qty_Order")
		F.Data.Dictionary.SetDefaultReturn("dicMJQty", 0)
		F.Data.DataTable.FillFromDictionary("dtFirstIteration", "dicMJQty", "KeyFieldForMJ", "ManToJob_Qty")
		F.Data.Dictionary.Close("dicMJQty")
		
		'This is taking care of the jobs which are still open.
		F.Data.Dictionary.CreateFromSQL("dicFilter", "con", "SELECT CONCAT(job, suffix) AS JBSFX, 'YES' as win FROM V_job_header WHERE date_closed = '1900-01-01'")
		F.Data.Dictionary.SetDefaultReturn("dicFilter", "-1")
		
		F.Data.DataTable.AddColumn("dtFirstIteration", "FilterColmn", "String")
		
		F.Data.DataTable.FillFromDictionary("dtFirstIteration", "dicFilter", "Matl_JS", "FilterColmn")
		
		F.Data.Dictionary.Close("dicFilter")
		
		F.Data.DataView.Create("dtFirstIteration", "dvFirst", 22, "[FilterColmn]<>'-1'", "")
		
		F.Data.DataView.ToDataTable("dtFirstIteration", "dvFirst", "dtSecondIT", True)
		
		F.Data.DataTable.AddColumn("dtSecondIT", "ForRelation", "String")
		
		F.Data.Dictionary.CreateFromDataView("dicRel", "dtFirst", "dvParentWO", "JS", "JS")
		F.Data.Dictionary.SetDefaultReturn("dicRel", "-1")
		
		F.Data.DataTable.FillFromDictionary("dtSecondIT", "dicRel", "MATL_JS", "ForRelation")
		
		F.Data.Dictionary.Close("dicRel")
		
		'This is for the SourceCode 
		F.Data.Dictionary.CreateFromSQL("dicSourceCD", "con", "Select Part + Location, RTRIM(LTRIM(CODE_SOURCE)) from V_INVENTORY_MST2")
		F.Data.Dictionary.SetDefaultReturn("dicSourceCD", "")
		
		F.Data.DataTable.AddColumn("dtSecondIT", "SourceCode", "String")
		F.Data.DataTable.FillFromDictionary("dtSecondIT", "dicSourceCD", "PartLoc", "SourceCode")
		
		F.Data.Dictionary.Close("dicSourceCD")
		
		'We are going to be using the original in WO column to save the original value:
		F.Data.DataTable.AddExpressionColumn("dtSecondIT", "OrigQtyOnWO", "Float", "[ManToJob_Qty]")
		
		F.Data.DataView.Create("dtSecondIT", "dvSecond", 22, "[ForRelation] <> '-1'", "MATL_JOB ASC, MATL_SUFFIX ASC")
		
		F.Data.DataView.ToDataTable("dtSecondIT", "dvSecond", "dtWOs$dtMatl", True)
				
		F.Data.DataTable.AddDisplayPartColumn("dtWOs$dtMatl", 0, "Matl_Part", "Matl_DisplayPart")
		
		F.Data.DataTable.AddRelation("dtWOs", "Job", "dtWOs$dtMatl", "Matl_Job", "Material")
		
		'F.Data.DataTable.CreateFromSQL("dtWOs$dtMatl", "con", "SELECT DISTINCT CONCAT(A.job, A.suffix) AS Matl_JS, CONCAT(CONCAT(A.job, A.suffix), A.seq) AS Matl_JSS, A.job AS Matl_Job, A.suffix AS Matl_Suffix, A.seq AS Matl_Sequence, COALESCE(A.part, '') AS Matl_Part, '' As Matl_DisplayPart, C.location AS Matl_Location, A.description AS Matl_Description, CAST(ISNULL(E.cost, 0.0) AS DOUBLE) AS Matl_InvCost, CAST(ISNULL(B.pcstoprod, 0.0) AS DOUBLE) AS Matl_ApsPcsToProd, CAST(ISNULL(B.pcscompl, 0.0) AS DOUBLE) AS Matl_ApsPcsCompl, CAST(ISNULL(B.pcsremain, 0.0) AS DOUBLE) AS Matl_ApsPcsRemain, CAST(ISNULL(D.qty_onHand, 0.0) AS DOUBLE) AS Matl_InvQtyOnHand, ISNULL(D.qty_onorder_po, 0.0) AS Matl_InvQtyOnOrderPo, CAST(ISNULL(D.qty_onorder_wo, 0.0) AS DOUBLE) AS Matl_InvQtyOnOrderWo, CAST(ISNULL(D.qty_required, 0.0) AS DOUBLE) AS Matl_InvQtyRequired FROM job_operations A LEFT JOIN apsv3_jblines B ON Matl_JSS = B.JSS LEFT JOIN job_header C ON A.job = C.job AND A.suffix = C.suffix LEFT JOIN inventory_mstr D ON A.part = D.part AND C.location = D.location LEFT JOIN v_inventory_cost E ON A.part = E.part AND E.locn = C.Location WHERE A.LMO = 'M' AND A.seq NOT IN ('995000', '998000') AND Matl_JS IN (SELECT CONCAT(job, suffix) AS JBSFX FROM v_job_header WHERE date_closed = '1900-01-01') ORDER BY A.job, A.suffix, A.seq;", True)
		
		'F.Data.DataTable.AddRelation("dtWOs", "JS", "dtWOs$dtMatl", "Matl_JS", "Material")
		
'		F.Data.DataTable.AddRelation("dtTest", "JS", "dtTest$dtMatl", "Matl_JS", "Material")
		
		F.Data.DataView.Create("dtWOs$dtMatl", "dvMatl")
		Gui.F_WO.GsGCWO.AddGridViewFromDataView("gvMatl", "dtWOs", "dvMatl")

		Gui.F_WO.GsGCWO.SetGridViewProperty("gvMatl", "MultiSelect", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvMatl", "OptionBehaviorEditable", False)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvMatl", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvMatl", "AllowSort", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvMatl", "AllowFilter", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvMatl", "OptionsDetailShowDetailTabs", False)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvMatl", "OptionsViewShowGroupPanel", False)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvMatl", "AllowColumnMoving", False)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvMatl", "EnterKeyNavigation", "Horizontal")
		
		'If the source code for the inventory part is "Manufacture to job", we are goign to color the InvQty On Order Green, as requested.
		Gui.F_WO.GsGCWO.AddStyleFormatCondition("gvMatl", "ManToJob_Qty", "SCTag", "Expression", "[SourceCode] = 'F'")
		Gui.F_WO.GsGCWO.SetStyleFormatConditionProperty("gvMatl", "ManToJob_Qty", "SCTag", "ForeColor", "DarkGreen")
		Gui.F_WO.GsGCWO.SetStyleFormatConditionProperty("gvMatl", "ManToJob_Qty", "SCTag", "FontBold", "True")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_JS", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_JSS", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Job", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Suffix", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Part", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "PartLoc", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "FilterColmn", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "ForRelation", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "SourceCode", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "OrigQtyOnWO", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "ManToJob_Parent", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "ManToJob_Suffix", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "ManToJob_DueDate", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "KeyFieldForMJ", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_date_due", "Visible", False)
		
		'Doesnt seem to work on individual columns
'		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Sequence", "OptionBehaviorEditable", False)
'		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_DisplayPart", "OptionBehaviorEditable", False)
'		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Location", "OptionBehaviorEditable", False)
'		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Description", "OptionBehaviorEditable", False)
'		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvCost", "OptionBehaviorEditable", False)
'		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsToProd", "OptionBehaviorEditable", False)
'		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsCompl", "OptionBehaviorEditable", False)
'		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsRemain", "OptionBehaviorEditable", False)
'		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnHand", "OptionBehaviorEditable", False)
'		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnOrderPo", "OptionBehaviorEditable", False)
'		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnOrderWo", "OptionBehaviorEditable", True)
'		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyRequired", "OptionBehaviorEditable", False)
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Sequence", "VisibleIndex", 1)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_DisplayPart", "VisibleIndex", 2)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Location", "VisibleIndex", 3)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Description", "VisibleIndex", 4)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvCost", "VisibleIndex", 5)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsToProd", "VisibleIndex", 6)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsCompl", "VisibleIndex", 7)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsRemain", "VisibleIndex", 8)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnHand", "VisibleIndex", 9)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnOrderPo", "VisibleIndex", 10)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnOrderWo", "VisibleIndex", 11)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "ManToJob_Qty", "VisibleIndex", 12)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyRequired", "VisibleIndex", 13)
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Sequence", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_DisplayPart", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Location", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Description", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvCost", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsToProd", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsCompl", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsRemain", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnHand", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnOrderPo", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnOrderWo", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "ManToJob_Qty", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyRequired", "ReadOnly", True)
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Sequence", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_DisplayPart", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Location", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Description", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvCost", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsToProd", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsCompl", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsRemain", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnHand", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnOrderPo", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnOrderWo", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "ManToJob_Qty", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyRequired", "AllowEdit", False)
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Sequence", "Caption", "Seq.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_DisplayPart", "Caption", "Part")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Location", "Caption", "Loc.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Description", "Caption", "Description")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvCost", "Caption", "Unit Cost")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsToProd", "Caption", "Qty. Req'd")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsCompl", "Caption", "Qty. Issued")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsRemain", "Caption", "Qty. Rem.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnHand", "Caption", "On Hand")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnOrderPo", "Caption", "On Order PO")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnOrderWo", "Caption", "Total On Order WO")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "ManToJob_Qty", "Caption", "Line On Order WO")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyRequired"," Caption", "Total Req'd")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Sequence", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_DisplayPart", "MinWidth", 150)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Location", "MinWidth", 27)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Description", "MinWidth", 200)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvCost", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsToProd", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsCompl", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsRemain", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnHand", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnOrderPo", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnOrderWo", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "ManToJob_Qty", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyRequired", "MinWidth", 75)
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Sequence", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Location", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvCost", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsToProd", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsCompl", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsRemain", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnHand", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnOrderPo", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnOrderWo", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "ManToJob_Qty", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyRequired", "HeaderHAlignment", "Center")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Sequence", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Location", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvCost", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsToProd", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsCompl", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsRemain", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnHand", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnOrderPo", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnOrderWo", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "ManToJob_Qty", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyRequired", "CellHAlignment", "Center")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Sequence", "Fixed", "Left")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_DisplayPart", "CellFontUnderline", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Location", "CellFontUnderline", True)
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_DisplayPart", "CellForeColor", "Blue")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Location", "CellForeColor", "Blue")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvCost", "DisplayCustomNumeric", "$#,###,###,##0.0000")
				
		F.Intrinsic.Control.If(V.Global.bLongPart)
			Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_DisplayPart", "MinWidth", 250)
		F.Intrinsic.Control.EndIf
	
		F.Intrinsic.Control.For(V.Local.i, 0, V.DataTable.dtWOs$dtMatl.RowCount--, 2)
			Gui.F_WO.GsGCWO.SetRowAppearance("gvMatl", V.Local.i, "BackColor", "AliceBlue")
		F.Intrinsic.Control.Next(V.Local.i)
		
		'Now we want to grab the additional information and add it to the children.
		F.Data.Dictionary.CreateFromDataView("dicChildMaterial", "dtWOs$dtChildren", "dvChild", "JS", "JS")
		F.Data.Dictionary.SetDefaultReturn("dicChildMaterial", "-1")
		F.Data.DataTable.AddColumn("dtSecondIT", "ForMatlRel", "String")
		
		F.Data.DataTable.FillFromDictionary("dtSecondIT", "dicChildMaterial", "MATL_JS", "ForMatlRel")
		
		F.Data.Dictionary.Close("dicChildMaterial")
		
		F.Data.DataTable.AddExpressionColumn("dtSecondIT", "Matl_InvQtyOnHandChild", "Float", "[Matl_InvQtyOnHand]")
		F.Data.DataTable.AddExpressionColumn("dtSecondIT", "Matl_InvQtyOnOrderWoChild", "Float", "[Matl_InvQtyOnOrderWo]")
		F.Data.DataTable.AddExpressionColumn("dtSecondIT", "ManToJob_QtyChild", "Float", "[ManToJob_Qty]")
		F.Data.DataTable.AddExpressionColumn("dtSecondIT", "Matl_DisplayPartCHILD", "String", "[Matl_DisplayPart]")
		F.Data.DataTable.AddExpressionColumn("dtSecondIT", "Matl_LocationCHILD", "String", "[Matl_Location]")
		
		F.Data.DataView.Create("dtSecondIT", "dvChildMat", 22, "[ForMatlRel] <> '-1'", "MATL_JS ASC")
		
		F.Data.DataView.ToDataTable("dtSecondIT", "dvChildMat", "dtWOs$dtChildren$dtChildMat", True)
'		F.Data.DataTable.AddExpressionColumn("dtWOs$dtChildren$dtChildMat", "Matl_InvQtyOnHandChild", "Float", "[Matl_InvQtyOnHand]")
'		F.Data.DataTable.AddExpressionColumn("dtWOs$dtChildren$dtChildMat", "Matl_InvQtyOnOrderWoChild", "Float", "[Matl_InvQtyOnOrderWo]")
		
		F.Data.DataView.Close("dtSecondIT", "dvChildMat")
		F.Data.DataTable.Close("dtSecondIT")
		
		F.Data.DataTable.AddRelation("dtWOs$dtChildren", "JS", "dtWOs$dtChildren$dtChildMat", "Matl_JS", "CHILD MATERIAL")
		
		
		F.Data.DataView.Create("dtWOs$dtChildren$dtChildMat", "dvChildMatl")
		Gui.F_WO.GsGCWO.AddGridViewFromDataView("gvChildMat", "dtWOs", "dvChildMatl")

		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildMat", "MultiSelect", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildMat", "OptionBehaviorEditable", False)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildMat", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildMat", "AllowSort", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildMat", "AllowFilter", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildMat", "OptionsDetailShowDetailTabs", False)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildMat", "OptionsViewShowGroupPanel", False)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildMat", "AllowColumnMoving", False)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildMat", "EnterKeyNavigation", "Horizontal")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_JS", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_JSS", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_Job", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_Suffix", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_Part", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "PartLoc", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "FilterColmn", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "FilterColmn", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "ForRelation", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "ForMatlRel", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnHand", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "SourceCode", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnOrderWo", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "OrigQtyOnWO", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "ManToJob_Qty", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "ManToJob_Parent", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "ManToJob_Suffix", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "ManToJob_DueDate", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "KeyFieldForMJ", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_date_due", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_DisplayPart", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_Location", "Visible", False)
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_Sequence", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_DisplayPartCHILD", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_LocationCHILD", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_Description", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvCost", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_ApsPcsToProd", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_ApsPcsCompl", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_ApsPcsRemain", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnHandChild", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnOrderPo", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnOrderWoChild", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "ManToJob_QtyChild", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyRequired", "ReadOnly", True)
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_Sequence", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_DisplayPartCHILD", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_LocationCHILD", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_Description", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvCost", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_ApsPcsToProd", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_ApsPcsCompl", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_ApsPcsRemain", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnHandChild", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnOrderPo", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnOrderWoChild", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "ManToJob_QtyChild", "AllowEdit", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyRequired", "AllowEdit", False)
		
		'If the source code for the inventory part is "Manufacture to job", we are goign to color the InvQty On Order Green, as requested.
		Gui.F_WO.GsGCWO.AddStyleFormatCondition("gvChildMat", "ManToJob_QtyChild", "SCTagChild", "Expression", "[SourceCode] = 'F'")
		Gui.F_WO.GsGCWO.SetStyleFormatConditionProperty("gvChildMat", "ManToJob_QtyChild", "SCTagChild", "ForeColor", "DarkGreen")
		Gui.F_WO.GsGCWO.SetStyleFormatConditionProperty("gvChildMat", "ManToJob_QtyChild", "SCTagChild", "FontBold", "True")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_Sequence", "VisibleIndex", 1)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_DisplayPartCHILD", "VisibleIndex", 2)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_LocationCHILD", "VisibleIndex", 3)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_Description", "VisibleIndex", 4)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvCost", "VisibleIndex", 5)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_ApsPcsToProd", "VisibleIndex", 6)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_ApsPcsCompl", "VisibleIndex", 7)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_ApsPcsRemain", "VisibleIndex", 8)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnHandChild", "VisibleIndex", 9)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnOrderPo", "VisibleIndex", 10)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnOrderWoChild", "VisibleIndex", 11)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "ManToJob_QtyChild", "VisibleIndex", 12)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyRequired", "VisibleIndex", 13)
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_Sequence", "Caption", "Seq.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_DisplayPartCHILD", "Caption", "Part")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_LocationCHILD", "Caption", "Loc.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_Description", "Caption", "Description")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvCost", "Caption", "Unit Cost")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_ApsPcsToProd", "Caption", "Qty. Req'd")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_ApsPcsCompl", "Caption", "Qty. Issued")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_ApsPcsRemain", "Caption", "Qty. Rem.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnHandChild", "Caption", "On Hand")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnOrderPo", "Caption", "On Order PO")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnOrderWoChild", "Caption", "Total On Order WO")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "ManToJob_QtyChild", "Caption", "Line On Order WO")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyRequired"," Caption", "Total Req'd")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_Sequence", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_DisplayPartCHILD", "MinWidth", 150)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_LocationCHILD", "MinWidth", 25)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_Description", "MinWidth", 200)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvCost", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_ApsPcsToProd", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_ApsPcsCompl", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_ApsPcsRemain", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnHandChild", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnOrderPo", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnOrderWoChild", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "ManToJob_QtyChild", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyRequired", "MinWidth", 75)
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_Sequence", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_LocationCHILD", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvCost", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_ApsPcsToProd", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_ApsPcsCompl", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_ApsPcsRemain", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnHandChild", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnOrderPo", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnOrderWoChild", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "ManToJob_QtyChild", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyRequired", "HeaderHAlignment", "Center")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_Sequence", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_LocationCHILD", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvCost", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_ApsPcsToProd", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_ApsPcsCompl", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_ApsPcsRemain", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnHandChild", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnOrderPo", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnOrderWoChild", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "ManToJob_QtyChild", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyRequired", "CellHAlignment", "Center")
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_Sequence", "Fixed", "Left")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_DisplayPartCHILD", "CellFontUnderline", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_LocationCHILD", "CellFontUnderline", True)
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_DisplayPartCHILD", "CellForeColor", "Blue")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_LocationCHILD", "CellForeColor", "Blue")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvCost", "DisplayCustomNumeric", "$#,###,###,##0.0000")
				
		F.Intrinsic.Control.If(V.Global.bLongPart)
			Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_DisplayPartCHILD", "MinWidth", 250)
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.Control.For(V.Local.i, 0, V.DataTable.dtWOs$dtMatl.RowCount--, 2)
			Gui.F_WO.GsGCWO.SetRowAppearance("gvChildMat", V.Local.i, "BackColor", "AliceBlue")
		F.Intrinsic.Control.Next(V.Local.i)
		
		'Gui.F_WO.GsGCWO.Visible(True)
		
		' Material subgrid loaded. Now load the MaterialPoLines data as a subgrid of this Material subgrid.
		F.Intrinsic.Control.CallSub(LoadDtDvGvMatlPoLines)
		
	F.Intrinsic.Control.Catch
	
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
		F.Intrinsic.UI.Msgbox(V.Global.sError)
		F.Intrinsic.Control.End()
		
	F.Intrinsic.Control.EndTry
	
Program.Sub.LoadDtDvGvMatl.End

Program.Sub.LoadDtDvGvMatlPoLines.Start
	F.Intrinsic.Control.Try
		
		' The "JSS IN ..." and "JS IN ..." clauses are necessary to match the Material subgrid's conditions so that all child rows have a corresponding parent row. Otherwise, it errors out.
'		F.Data.DataTable.CreateFromSQL("dtWOs$dtMatl$dtPoLines", "con", "SELECT CONCAT(P.job, P.suffix) AS Matl_PoLines_JS, CONCAT(CONCAT(P.job, P.suffix), P.sequence) AS Matl_PoLines_JSS, P.vendor AS Matl_PoLines_Vendor, CAST(IF(P.date_due_line = '1900-01-01', NULL, P.date_due_line) AS DATE) AS Matl_PoLines_DateDueLine, P.purchase_order AS Matl_PoLines_PoNumber, LEFT(P.record_no, 3) AS Matl_PoLines_PoLine, CAST(ISNULL(P.qty_order, 0) AS DOUBLE) AS Matl_PoLines_QtyOrder, CAST(ISNULL(P.qty_received, 0) AS DOUBLE) AS Matl_PoLines_QtyReceived, CAST(ISNULL(P.qty_order, 0) - ISNULL(P.qty_received, 0) AS DOUBLE) AS Matl_PoLines_QtyRemaining, CAST(IF(P.flag_recv_close = 'Y', 1, 0) AS BIT) AS Matl_PoLines_FlagClosed FROM v_po_lines P WHERE Matl_PoLines_JSS IN (SELECT DISTINCT CONCAT(CONCAT(O.job, O.suffix), O.seq) FROM v_job_operations O WHERE O.LMO = 'M' AND O.seq NOT IN ('995000','998000')) AND Matl_PoLines_JS IN (SELECT DISTINCT CONCAT(H.job, H.suffix) FROM v_job_header H WHERE H.date_closed = '1900-01-01') ORDER BY Matl_PoLines_JSS;", True)
		
		F.Data.DataTable.CreateFromSQL("dtPoLns", "con", "SELECT CONCAT(P.job, P.suffix) AS Matl_PoLines_JS, CONCAT(CONCAT(P.job, P.suffix), P.sequence) AS Matl_PoLines_JSS, P.vendor AS Matl_PoLines_Vendor, CAST(IF(P.date_due_line = '1900-01-01', NULL, P.date_due_line) AS DATE) AS Matl_PoLines_DateDueLine, P.purchase_order AS Matl_PoLines_PoNumber, LEFT(P.record_no, 3) AS Matl_PoLines_PoLine, CAST(ISNULL(P.qty_order, 0) AS DOUBLE) AS Matl_PoLines_QtyOrder, CAST(ISNULL(P.qty_received, 0) AS DOUBLE) AS Matl_PoLines_QtyReceived, CAST(ISNULL(P.qty_order, 0) - ISNULL(P.qty_received, 0) AS DOUBLE) AS Matl_PoLines_QtyRemaining, CAST(IF(P.flag_recv_close = 'Y', 1, 0) AS BIT) AS Matl_PoLines_FlagClosed FROM v_po_lines P where P.JOB <> ''ORDER BY Matl_PoLines_JSS;", True)
		F.Data.DataTable.AddColumn("dtPoLns", "Child1Assoc", "String")
		F.Data.DataTable.AddColumn("dtPoLns", "Child2Assoc", "String")
		
		'To fill in information for the child work order PO lines, we need to create a dictionary from the table we are using to display data
		F.Data.Dictionary.CreateFromDataTable("dicForPos", "dtWOs$dtMatl", "Matl_JSS", "Matl_JSS")
		F.Data.Dictionary.SetDefaultReturn("dicForPos", "-1")
		
		F.Data.DataTable.FillFromDictionary("dtPoLns", "dicForPos", "Matl_PoLines_JSS", "Child1Assoc")
		
		F.Data.Dictionary.Close("dicForPos")
		
		F.Data.DataView.Create("dtPoLns", "dvPoForParent", 22, "[Child1Assoc] <> '-1'", "Matl_PoLines_JSS ASC")
		
		F.Data.DataView.ToDataTable("dtPoLns", "dvPoForParent", "dtWOs$dtMatl$dtPoLines", True)
		
		F.Data.DataTable.AddRelation("dtWOs$dtMatl", "Matl_JSS", "dtWOs$dtMatl$dtPoLines", "Matl_PoLines_JSS", "PO Lines")

		F.Data.DataView.Create("dtWOs$dtMatl$dtPoLines", "dvMatlPoLines")
		GUI.F_WO.GsGCWO.AddGridviewFromDataview("gvMatlPoLines", "dtWOs", "dvMatlPoLines")
		
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvMatlPoLines", "MultiSelect", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvMatlPoLines", "OptionBehaviorEditable", False)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvMatlPoLines", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvMatlPoLines", "AllowSort", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvMatlPoLines", "AllowFilter", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvMatlPoLines", "OptionsDetailShowDetailTabs", False)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvMatlPoLines", "OptionsViewShowGroupPanel", False)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvMatlPoLines", "AllowColumnMoving", False)
		GUI.F_WO.GsGCWO.SetGridviewProperty("gvMatlPoLines", "EnableAppearanceOddRow", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvMatlPoLines", "EnterKeyNavigation", "Horizontal")
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_JS", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_JSS", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Child1Assoc", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Child2Assoc", "Visible", False)
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_FlagClosed", "VisibleIndex", 1)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_Vendor", "VisibleIndex", 2)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_PoNumber", "VisibleIndex", 3)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_PoLine", "VisibleIndex", 4)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_QtyOrder", "VisibleIndex", 5)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_QtyReceived", "VisibleIndex", 6)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_QtyRemaining", "VisibleIndex", 7)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_DateDueLine", "VisibleIndex", 8)
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_FlagClosed", "Caption", "PO Closed")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_Vendor", "Caption", "Vendor")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_PoNumber", "Caption", "PO")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_PoLine", "Caption", "PO Line")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_QtyOrder", "Caption", "PO Qty. Ord.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_QtyReceived", "Caption", "PO Qty. Rec.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_QtyRemaining", "Caption", "PO Qty. Rem.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_DateDueLine", "Caption", "PO Due Date")
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_FlagClosed", "MinWidth", 35)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_Vendor", "MinWidth", 35)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_PoNumber", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_PoLine", "MinWidth", 35)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_QtyOrder", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_QtyReceived", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_QtyRemaining", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_DateDueLine", "MinWidth", 75)
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_FlagClosed", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_QtyOrder", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_QtyReceived", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_QtyRemaining", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_DateDueLine", "HeaderHAlignment", "Center")
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_QtyOrder", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_QtyReceived", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_QtyRemaining", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_DateDueLine", "CellHAlignment", "Center")
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_PoNumber", "CellFontUnderline",True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_PoLine", "CellFontUnderline",True)
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_PoNumber", "CellForeColor", "Blue")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_PoLine", "CellForeColor", "Blue")
		
		GUI.F_WO.GsGCWO.SetColumnProperty("gvMatlPoLines", "Matl_PoLines_DateDueLine", "DisplayCustomDatetime", "d")
		
		'The stuff below is to fill the child's child
				
		'To fill in information for the child work order PO lines, we need to create a dictionary from the table we are using to display data
		F.Data.Dictionary.CreateFromDataTable("dicForPos", "dtWOs$dtChildren$dtChildMat", "Matl_JSS", "Matl_JSS")
		F.Data.Dictionary.SetDefaultReturn("dicForPos", "-1")
		
		F.Data.DataTable.FillFromDictionary("dtPoLns", "dicForPos", "Matl_PoLines_JSS", "Child2Assoc")
		
		F.Data.Dictionary.Close("dicForPos")
		
		F.Data.DataTable.AddExpressionColumn("dtPoLns", "Matl_PoLn_PoNoCHILD", "String", "[Matl_PoLines_PoNumber]")
		F.Data.DataTable.AddExpressionColumn("dtPoLns", "Matl_PoLn_PoLnsCHILD", "String", "[Matl_PoLines_PoLine]")
		
		F.Data.DataView.Create("dtPoLns", "dvPoForChild", 22, "[Child2Assoc] <> '-1'", "Matl_PoLines_JSS ASC")
		
		F.Data.DataView.ToDataTable("dtPoLns", "dvPoForChild", "dtWOs$dtChildren$dtChildMat$dtPoLines", True)
		
		F.Data.DataView.Close("dtPoLns", "dvPoForChild")
		F.Data.DataView.Close("dtPoLns", "dvPoForParent")
		F.Data.DataTable.Close("dtPoLns")
		
		F.Data.DataTable.AddRelation("dtWOs$dtChildren$dtChildMat", "Matl_JSS", "dtWOs$dtChildren$dtChildMat$dtPoLines", "Matl_PoLines_JSS", "CHILD PO Lines")
		
		F.Data.DataView.Create("dtWOs$dtChildren$dtChildMat$dtPoLines", "dvChildMatlPoLines")
		GUI.F_WO.GsGCWO.AddGridviewFromDataview("gvChildMatlPoLines", "dtWOs", "dvChildMatlPoLines")
				
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildMatlPoLines", "MultiSelect", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildMatlPoLines", "OptionBehaviorEditable", False)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildMatlPoLines", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildMatlPoLines", "AllowSort", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildMatlPoLines", "AllowFilter", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildMatlPoLines", "OptionsDetailShowDetailTabs", False)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildMatlPoLines", "OptionsViewShowGroupPanel", False)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildMatlPoLines", "AllowColumnMoving", False)
		GUI.F_WO.GsGCWO.SetGridviewProperty("gvChildMatlPoLines", "EnableAppearanceOddRow", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildMatlPoLines", "EnterKeyNavigation", "Horizontal")
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLines_JS", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLines_JSS", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Child1Assoc", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Child2Assoc", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLines_PoNumber", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLines_PoLine", "Visible", False)
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLines_FlagClosed", "VisibleIndex", 1)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLines_Vendor", "VisibleIndex", 2)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLn_PoNoCHILD", "VisibleIndex", 3)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLn_PoLnsCHILD", "VisibleIndex", 4)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLines_QtyOrder", "VisibleIndex", 5)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLines_QtyReceived", "VisibleIndex", 6)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLines_QtyRemaining", "VisibleIndex", 7)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLines_DateDueLine", "VisibleIndex", 8)
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLines_FlagClosed", "Caption", "PO Closed")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLines_Vendor", "Caption", "Vendor")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLn_PoNoCHILD", "Caption", "PO")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLn_PoLnsCHILD", "Caption", "PO Line")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLines_QtyOrder", "Caption", "PO Qty. Ord.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLines_QtyReceived", "Caption", "PO Qty. Rec.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLines_QtyRemaining", "Caption", "PO Qty. Rem.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLines_DateDueLine", "Caption", "PO Due Date")
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLines_FlagClosed", "MinWidth", 35)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLines_Vendor", "MinWidth", 35)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLn_PoNoCHILD", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLn_PoLnsCHILD", "MinWidth", 35)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLines_QtyOrder", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLines_QtyReceived", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLines_QtyRemaining", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLines_DateDueLine", "MinWidth", 75)
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLines_FlagClosed", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLines_QtyOrder", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLines_QtyReceived", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLines_QtyRemaining", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLines_DateDueLine", "HeaderHAlignment", "Center")
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLines_QtyOrder", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLines_QtyReceived", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLines_QtyRemaining", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLines_DateDueLine", "CellHAlignment", "Center")
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLn_PoNoCHILD", "CellFontUnderline",True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLn_PoLnsCHILD", "CellFontUnderline",True)
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLn_PoNoCHILD", "CellForeColor", "Blue")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLn_PoLnsCHILD", "CellForeColor", "Blue")
		
		GUI.F_WO.GsGCWO.SetColumnProperty("gvChildMatlPoLines", "Matl_PoLines_DateDueLine", "DisplayCustomDatetime", "d")
	
	F.Intrinsic.Control.Catch

		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
		F.Intrinsic.UI.Msgbox(V.Global.sError)
		F.Intrinsic.Control.End()
		
	F.Intrinsic.Control.EndTry

Program.Sub.LoadDtDvGvMatlPoLines.End

Program.Sub.LoadDtDvGvLbr.Start
	V.Local.i.Declare()

	F.Intrinsic.Control.Try

'		F.Data.DataTable.CreateFromSQL("dtWOs$dtLbr", "con", "SELECT DISTINCT CONCAT(A.job, A.suffix) AS Lbr_JS, CONCAT(CONCAT(A.job, A.suffix), A.seq) AS Lbr_JSS, A.job AS Lbr_Job, A.suffix AS Lbr_Suffix, A.seq AS Lbr_Sequence, B.seqres AS Lbr_ApsWorkcenter, B.descr AS Lbr_ApsDescription, B.startdate AS Lbr_ApsStartDate, B.duedate AS Lbr_ApsDueDate, B.compldate AS Lbr_ApsComplDate, A.code_sort_oper AS Lbr_SortCode, B.overlap AS Lbr_ApsOverlap, B.nomach AS Lbr_ApsWcFactor, B.float AS Lbr_ApsFloat, B.hoursorig AS Lbr_ApsHrsOrig, B.hoursappl AS Lbr_ApsHrsAppl, B.hoursrem AS Lbr_ApsHrsRem, B.pcstoprod AS Lbr_ApsPcsToProd, B.pcscompl AS Lbr_ApsPcsCompl, B.pcsremain AS Lbr_ApsPcsRemain FROM job_operations A LEFT JOIN apsv3_jblines B ON Lbr_JSS = B.JSS WHERE A.LMO = 'L' AND A.seq NOT IN ('996000', '998500') AND Lbr_JS IN (SELECT CONCAT(job, suffix) AS JBSFX FROM v_job_header WHERE date_closed = '1900-01-01') ORDER BY A.job, A.suffix, A.seq;", True)
		F.Data.DataTable.CreateFromSQL("dtLabor", "con", "SELECT DISTINCT CONCAT(A.job, A.suffix) AS Lbr_JS, CONCAT(CONCAT(A.job, A.suffix), A.seq) AS Lbr_JSS, A.job AS Lbr_Job, A.suffix AS Lbr_Suffix, A.seq AS Lbr_Sequence, B.seqres AS Lbr_ApsWorkcenter, B.descr AS Lbr_ApsDescription, B.startdate AS Lbr_ApsStartDate, B.duedate AS Lbr_ApsDueDate, B.compldate AS Lbr_ApsComplDate, A.code_sort_oper AS Lbr_SortCode, B.overlap AS Lbr_ApsOverlap, B.nomach AS Lbr_ApsWcFactor, B.float AS Lbr_ApsFloat, B.hoursorig AS Lbr_ApsHrsOrig, B.hoursappl AS Lbr_ApsHrsAppl, B.hoursrem AS Lbr_ApsHrsRem, B.pcstoprod AS Lbr_ApsPcsToProd, B.pcscompl AS Lbr_ApsPcsCompl, B.pcsremain AS Lbr_ApsPcsRemain FROM job_operations A LEFT JOIN apsv3_jblines B ON Lbr_JSS = B.JSS WHERE A.LMO = 'L' AND A.seq NOT IN ('996000', '998500') AND Lbr_JS IN (SELECT CONCAT(job, suffix) AS JBSFX FROM v_job_header WHERE date_closed = '1900-01-01') ORDER BY A.job, A.suffix, A.seq;", True)
		
		F.Data.DataTable.AddColumn("dtlabor", "Child1Labor", "String")
		F.Data.DataTable.AddColumn("dtlabor", "Child2Labor", "String")
		
		F.Data.Dictionary.CreateFromDataTable("diclab1", "dtWOs", "JS", "JS")
		F.Data.Dictionary.SetDefaultReturn("diclab1", "-1")
		
		F.Data.DataTable.FillFromDictionary("dtLabor", "diclab1", "Lbr_JS", "Child1Labor")
		
		F.Data.Dictionary.Close("diclab1")
		
		F.Data.DataView.Create("dtLabor", "dvLab1", 22, "[Child1Labor] <> '-1'", "Lbr_JSS ASC")
		
		F.Data.DataView.ToDataTable("dtLabor", "dvLab1", "dtWOs$dtLbr", True)
		
		F.Data.DataTable.AddRelation("dtWOs", "JS", "dtWOs$dtLbr", "Lbr_JS", "Labor")
		
		F.Data.DataView.Create("dtWOs$dtLbr", "dvLbr")
		Gui.F_WO.GsGCWO.AddGridViewFromDataView("gvLbr", "dtWOs", "dvLbr")
		
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvLbr", "MultiSelect", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvLbr", "OptionBehaviorEditable", False)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvLbr", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvLbr", "AllowSort", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvLbr", "AllowFilter", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvLbr", "OptionsDetailShowDetailTabs", False)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvLbr", "OptionsViewShowGroupPanel", False)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvLbr", "AllowColumnMoving", False)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvLbr", "EnterKeyNavigation", "Horizontal")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_JS", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_JSS", "Visible" ,False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_Job", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_Suffix"," Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Child1Labor"," Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Child2Labor"," Visible", False)
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_Sequence", "Caption", "Seq.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsWorkcenter", "Caption", "WC")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsDescription", "Caption", "Description")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsStartDate", "Caption", "Start Date")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsDueDate", "Caption", "Due Date")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsComplDate", "Caption", "Compl. Date")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_SortCode", "Caption", "Sort Code")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsOverlap", "Caption", "Overlap")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsWcFactor", "Caption", "WC Factor")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsFloat", "Caption", "Float")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsHrsOrig", "Caption", "Est. Hrs.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsHrsAppl", "Caption", "Act. Hrs.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsHrsRem", "Caption", "Rem. Hrs.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsPcsToProd", "Caption", "Order Qty.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsPcsCompl", "Caption", "Comp. Qty.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsPcsRemain", "Caption", "Rem. Qty.")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_Sequence", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsWorkcenter", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsDescription", "MinWidth", 200)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsStartDate", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsDueDate", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsComplDate", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_SortCode", "MinWidth", 100)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsOverlap", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsWcFactor", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsFloat", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsHrsOrig", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsHrsAppl", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsHrsRem", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsPcsToProd", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsPcsCompl", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsPcsRemain", "MinWidth", 75)
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_Sequence", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsStartDate", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsDueDate", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsComplDate", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsOverlap", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsWcFactor", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsFloat", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsHrsOrig", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsHrsAppl", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsHrsRem", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsPcsToProd", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsPcsCompl", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsPcsRemain", "HeaderHAlignment", "Center")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_Sequence", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsStartDate", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsDueDate", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsComplDate", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsOverlap", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsWcFactor", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsFloat", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsHrsOrig", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsHrsAppl", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsHrsRem", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsPcsToProd", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsPcsCompl", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsPcsRemain", "CellHAlignment", "Center")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_Sequence", "Fixed", "Left")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsWorkcenter", "CellTrimming", "Character")
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsOverlap", "DisplayCustomNumeric", "#,###,###,##0.00")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsWcFactor", "DisplayCustomNumeric", "#,###,###,##0.00")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsFloat", "DisplayCustomNumeric", "#,###,###,##0.00")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsHrsOrig", "DisplayCustomNumeric", "#,###,###,##0.00")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsHrsAppl", "DisplayCustomNumeric", "#,###,###,##0.00")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsHrsRem", "DisplayCustomNumeric", "#,###,###,##0.00")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsPcsToProd", "DisplayCustomNumeric", "#,###,###,##0.00")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsPcsCompl", "DisplayCustomNumeric", "#,###,###,##0.00")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsPcsRemain", "DisplayCustomNumeric", "#,###,###,##0.00")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsStartDate", "DisplayCustomDatetime", "d")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsDueDate", "DisplayCustomDatetime", "d")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbr", "Lbr_ApsComplDate", "DisplayCustomDatetime", "d")
	
		F.Intrinsic.Control.For(V.Local.i, 0, V.DataTable.dtWOs$dtLbr.RowCount--, 2)
			Gui.F_WO.GsGCWO.SetRowAppearance("gvLbr", V.Local.i, "BackColor", "AliceBlue")
		F.Intrinsic.Control.Next(V.Local.i)
		
		'For the children datatable
		
		F.Data.Dictionary.CreateFromDataTable("diclab1", "dtWOs$dtChildren", "JS", "JS")
		F.Data.Dictionary.SetDefaultReturn("diclab1", "-1")
		
		F.Data.DataTable.FillFromDictionary("dtLabor", "diclab1", "Lbr_JS", "Child2Labor")
		
		F.Data.Dictionary.Close("diclab1")
		
		F.Data.DataView.Create("dtLabor", "dvLab2", 22, "[Child2Labor] <> '-1'", "Lbr_JSS ASC")
		
		F.Data.DataView.ToDataTable("dtLabor", "dvLab2", "dtWOs$dtChildren$dtLbr", True)
		
		F.Data.DataView.Close("dtLabor", "dvLab1")
		F.Data.DataView.Close("dtLabor", "dvLab2")
		F.Data.DataTable.Close("dtLabor")
		
		F.Data.DataTable.AddRelation("dtWOs$dtChildren", "JS", "dtWOs$dtChildren$dtLbr", "Lbr_JS", "Child Labor")
		
		F.Data.DataView.Create("dtWOs$dtChildren$dtLbr", "dvLbrChild")
		
		Gui.F_WO.GsGCWO.AddGridViewFromDataView("gvLbrChild", "dtWOs", "dvLbrChild")
		
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvLbrChild", "MultiSelect", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvLbrChild", "OptionBehaviorEditable", False)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvLbrChild", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvLbrChild", "AllowSort", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvLbrChild", "AllowFilter", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvLbrChild", "OptionsDetailShowDetailTabs", False)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvLbrChild", "OptionsViewShowGroupPanel", False)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvLbrChild", "AllowColumnMoving", False)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvLbrChild", "EnterKeyNavigation", "Horizontal")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_JS", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_JSS", "Visible" ,False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_Job", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_Suffix"," Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Child1Labor"," Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Child2Labor"," Visible", False)
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_Sequence", "Caption", "Seq.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsWorkcenter", "Caption", "WC")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsDescription", "Caption", "Description")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsStartDate", "Caption", "Start Date")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsDueDate", "Caption", "Due Date")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsComplDate", "Caption", "Compl. Date")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_SortCode", "Caption", "Sort Code")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsOverlap", "Caption", "Overlap")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsWcFactor", "Caption", "WC Factor")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsFloat", "Caption", "Float")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsHrsOrig", "Caption", "Est. Hrs.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsHrsAppl", "Caption", "Act. Hrs.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsHrsRem", "Caption", "Rem. Hrs.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsPcsToProd", "Caption", "Order Qty.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsPcsCompl", "Caption", "Comp. Qty.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsPcsRemain", "Caption", "Rem. Qty.")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_Sequence", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsWorkcenter", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsDescription", "MinWidth", 200)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsStartDate", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsDueDate", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsComplDate", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_SortCode", "MinWidth", 100)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsOverlap", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsWcFactor", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsFloat", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsHrsOrig", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsHrsAppl", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsHrsRem", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsPcsToProd", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsPcsCompl", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsPcsRemain", "MinWidth", 75)
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_Sequence", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsStartDate", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsDueDate", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsComplDate", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsOverlap", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsWcFactor", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsFloat", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsHrsOrig", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsHrsAppl", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsHrsRem", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsPcsToProd", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsPcsCompl", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsPcsRemain", "HeaderHAlignment", "Center")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_Sequence", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsStartDate", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsDueDate", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsComplDate", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsOverlap", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsWcFactor", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsFloat", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsHrsOrig", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsHrsAppl", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsHrsRem", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsPcsToProd", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsPcsCompl", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsPcsRemain", "CellHAlignment", "Center")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_Sequence", "Fixed", "Left")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsWorkcenter", "CellTrimming", "Character")
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsOverlap", "DisplayCustomNumeric", "#,###,###,##0.00")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsWcFactor", "DisplayCustomNumeric", "#,###,###,##0.00")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsFloat", "DisplayCustomNumeric", "#,###,###,##0.00")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsHrsOrig", "DisplayCustomNumeric", "#,###,###,##0.00")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsHrsAppl", "DisplayCustomNumeric", "#,###,###,##0.00")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsHrsRem", "DisplayCustomNumeric", "#,###,###,##0.00")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsPcsToProd", "DisplayCustomNumeric", "#,###,###,##0.00")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsPcsCompl", "DisplayCustomNumeric", "#,###,###,##0.00")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsPcsRemain", "DisplayCustomNumeric", "#,###,###,##0.00")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsStartDate", "DisplayCustomDatetime", "d")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsDueDate", "DisplayCustomDatetime", "d")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvLbrChild", "Lbr_ApsComplDate", "DisplayCustomDatetime", "d")
	
		F.Intrinsic.Control.For(V.Local.i, 0, V.DataTable.dtWOs$dtLbr.RowCount--, 2)
			Gui.F_WO.GsGCWO.SetRowAppearance("gvLbrChild", V.Local.i, "BackColor", "AliceBlue")
		F.Intrinsic.Control.Next(V.Local.i)
	
	F.Intrinsic.Control.Catch
	
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
		F.Intrinsic.UI.Msgbox(V.Global.sError)
		F.Intrinsic.Control.End()
		
	F.Intrinsic.Control.EndTry
	
Program.Sub.LoadDtDvGvLbr.End

Program.Sub.LoadDtDvGvOut.Start
	V.Local.i.Declare()

	F.Intrinsic.Control.Try
		
		' New query.
		'	Delete V_PO_LINES join to eliminate timeout. Add that data later using dictionaries.
		'	ORDER BY jss instead for actually correct row coloring.
		'	Aliases renamed for readability.
		
		F.Data.DataTable.CreateFromSQL("dtOut", "con", "SELECT DISTINCT CONCAT(A.job, A.suffix) AS Out_JS, CONCAT(CONCAT(A.job, A.suffix), A.seq) AS Out_JSS, A.job AS Out_Job, A.suffix AS Out_Suffix, A.seq AS Out_Sequence, C.name_vendor AS Out_VendorName, B.descr AS Out_ApsDescription, B.startdate AS Out_ApsStartDate, B.duedate AS Out_ApsDueDate, B.compldate AS Out_ApsComplDate FROM job_operations A LEFT JOIN apsv3_jblines B ON Out_JSS = B.JSS LEFT JOIN v_vendor_master C ON B.opcode = C.vendor WHERE A.LMO = 'O' AND A.seq <> '997000' AND Out_JS IN (SELECT CONCAT(job, suffix) AS JBSFX FROM v_job_header WHERE date_closed = '1900-01-01') ORDER BY A.job, A.suffix, A.seq;", True)
		
		' Now, query V_PO_LINES directly. Make dictionaries to pair up JSS with PoNumber and PoLine. Then FillFromDictionary the main DT.
		F.Data.DataTable.CreateFromSql("dtTemp", "con", "SELECT DISTINCT CONCAT(CONCAT(job, suffix), sequence) AS Out_JSS, purchase_order AS Out_PoNumber, LEFT(record_no, 3) AS Out_PoLine FROM v_po_lines;")
		
		F.Data.DataTable.AddColumn("dtOut", "Out_PoNumber", "String", "")
		F.Data.Dictionary.CreateFromDataTable("dictTemp", "dtTemp", "Out_JSS", "Out_PoNumber")
		F.Data.Dictionary.SetDefaultReturn("dictTemp", "")
		F.Data.DataTable.FillFromDictionary("dtOut", "dictTemp", "Out_JSS", "Out_PoNumber")
		F.Data.Dictionary.Close("dictTemp")
		
		F.Data.DataTable.AddColumn("dtOut", "Out_PoLine", "String", "")
		F.Data.Dictionary.CreateFromDataTable("dictTemp", "dtTemp", "Out_JSS", "Out_PoLine")
		F.Data.Dictionary.SetDefaultReturn("dictTemp", "")
		F.Data.DataTable.FillFromDictionary("dtOut", "dictTemp", "Out_JSS", "Out_PoLine")
		F.Data.Dictionary.Close("dictTemp")
		
		F.Data.DataTable.Close("dtTemp")
		
		F.Data.DataTable.AddColumn("dtOut", "Child1Out", "String")
		F.Data.DataTable.AddColumn("dtOut", "Child2Out", "String")
		
		'We are going to do the same thing we have been doing 
				
		F.Data.Dictionary.CreateFromDataTable("dicOS1", "dtWOs", "JS", "JS")
		F.Data.Dictionary.SetDefaultReturn("dicOS1", "-1")
		
		F.Data.DataTable.FillFromDictionary("dtOut", "dicOS1", "Out_JS", "Child1Out")
		
		F.Data.Dictionary.Close("dicOS1")
		
		F.Data.DataView.Create("dtOut", "dvLab2", 22, "[Child1Out] <> '-1'", "Out_JSS ASC")
		
		F.Data.DataView.ToDataTable("dtOut", "dvLab2", "dtWOs$dtOut", True)
		
		F.Data.DataTable.AddRelation("dtWOs", "JS", "dtWOs$dtOut", "Out_JS", "Outside")
		
		F.Data.DataView.Create("dtWOs$dtOut", "dvOut")
		Gui.F_WO.GsGCWO.AddGridViewFromDataView("gvOut", "dtWOs", "dvOut")
		
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvOut", "MultiSelect", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvOut", "OptionBehaviorEditable", False)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvOut", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvOut", "AllowSort", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvOut", "AllowFilter", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvOut", "OptionsDetailShowDetailTabs", False)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvOut", "OptionsViewShowGroupPanel", False)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvOut", "AllowColumnMoving", False)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvOut", "EnterKeyNavigation", "Horizontal")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_JS", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_JSS", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_Job", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_Suffix", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Child1Out", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Child2Out", "Visible", False)
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_Sequence", "Caption", "Seq.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_VendorName", "Caption", "Vend. Name")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_ApsDescription", "Caption", "Description")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_ApsStartDate", "Caption", "Start Date")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_ApsDueDate", "Caption", "Due Date")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_ApsComplDate", "Caption", "Comp. Date")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_PoNumber", "Caption", "PO")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_PoLine", "Caption", "PO Line")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_Sequence", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_VendorName", "MinWidth", 175)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_ApsDescription", "MinWidth", 200)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_ApsStartDate", "MinWidth", 100)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_ApsDueDate", "MinWidth", 100)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_ApsComplDate", "MinWidth", 100)	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_PoNumber", "MinWidth", 100)	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_PoLine", "MinWidth", 100)	
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_Sequence", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_ApsStartDate", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_ApsDueDate", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_ApsComplDate", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_PoNumber", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_PoLine", "HeaderHAlignment", "Center")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_Sequence", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_ApsStartDate", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_ApsDueDate", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_ApsComplDate", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_PoNumber", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_PoLine", "CellHAlignment", "Center")
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_PoNumber", "CellFontUnderline", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_PoLine", "CellFontUnderline", True)
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_PoNumber", "CellForeColor", "Blue")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_PoLine", "CellForeColor", "Blue")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_Sequence", "Fixed", "Left")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_ApsStartDate", "DisplayCustomDatetime", "d")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_ApsDueDate", "DisplayCustomDatetime", "d")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvOut", "Out_ApsComplDate", "DisplayCustomDatetime", "d")
	
		F.Intrinsic.Control.For(V.Local.i, 0, V.DataTable.dtWOs$dtOut.RowCount--, 2)
			Gui.F_WO.GsGCWO.SetRowAppearance("gvOut", V.Local.i, "BackColor", "AliceBlue")
		F.Intrinsic.Control.Next(V.Local.i)
		
		F.Data.Dictionary.CreateFromDataTable("dicOS2", "dtWOs$dtChildren", "JS", "JS")
		F.Data.Dictionary.SetDefaultReturn("dicOS2", "-1")
		
		F.Data.DataTable.FillFromDictionary("dtOut", "dicOS2", "Out_JS", "Child2Out")
		
		F.Data.Dictionary.Close("dicOS2")
		
		F.Data.DataTable.AddExpressionColumn("dtOut", "Out_PoNOChild", "String", "[Out_PoNumber]")
		F.Data.DataTable.AddExpressionColumn("dtOut", "Out_PoLNChild", "String", "[Out_PoLine]")
		
		F.Data.DataView.Create("dtOut", "dvOS2", 22, "[Child2Out] <> '-1'", "Out_JSS ASC")
		
		F.Data.DataView.ToDataTable("dtOut", "dvOS2", "dtWOs$dtChildren$dtOut", True)
		
		F.Data.DataView.Close("dtOut", "dvLab2")
		F.Data.DataView.Close("dtOut", "dvOS2")
		F.Data.DataTable.Close("dtOut")
		
		F.Data.DataTable.AddRelation("dtWOs$dtChildren", "JS", "dtWOs$dtChildren$dtOut", "Out_JS", "Child Outside")
		
		F.Data.DataView.Create("dtWOs$dtChildren$dtOut", "dvChildOut")
		Gui.F_WO.GsGCWO.AddGridViewFromDataView("gvChildOut", "dtWOs", "dvChildOut")
		
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildOut", "MultiSelect", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildOut", "OptionBehaviorEditable", False)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildOut", "ReadOnly", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildOut", "AllowSort", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildOut", "AllowFilter", True)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildOut", "OptionsDetailShowDetailTabs", False)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildOut", "OptionsViewShowGroupPanel", False)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildOut", "AllowColumnMoving", False)
		Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildOut", "EnterKeyNavigation", "Horizontal")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_JS", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_JSS", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_Job", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_Suffix", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Child1Out", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Child2Out", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_PoNumber", "Visible", False)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_PoLine", "Visible", False)
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_Sequence", "Caption", "Seq.")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_VendorName", "Caption", "Vend. Name")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_ApsDescription", "Caption", "Description")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_ApsStartDate", "Caption", "Start Date")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_ApsDueDate", "Caption", "Due Date")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_ApsComplDate", "Caption", "Comp. Date")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_PoNOChild", "Caption", "PO")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_PoLNChild", "Caption", "PO Line")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_Sequence", "MinWidth", 75)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_VendorName", "MinWidth", 175)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_ApsDescription", "MinWidth", 200)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_ApsStartDate", "MinWidth", 100)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_ApsDueDate", "MinWidth", 100)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_ApsComplDate", "MinWidth", 100)	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_PoNOChild", "MinWidth", 100)	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_PoLNChild", "MinWidth", 100)	
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_Sequence", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_ApsStartDate", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_ApsDueDate", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_ApsComplDate", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_PoNOChild", "HeaderHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_PoLNChild", "HeaderHAlignment", "Center")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_Sequence", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_ApsStartDate", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_ApsDueDate", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_ApsComplDate", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_PoNOChild", "CellHAlignment", "Center")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_PoLNChild", "CellHAlignment", "Center")
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_PoNOChild", "CellFontUnderline", True)
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_PoLNChild", "CellFontUnderline", True)
		
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_PoNOChild", "CellForeColor", "Blue")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_PoLNChild", "CellForeColor", "Blue")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_Sequence", "Fixed", "Left")
	
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_ApsStartDate", "DisplayCustomDatetime", "d")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_ApsDueDate", "DisplayCustomDatetime", "d")
		Gui.F_WO.GsGCWO.SetColumnProperty("gvChildOut", "Out_ApsComplDate", "DisplayCustomDatetime", "d")
		
		F.Intrinsic.Control.For(V.Local.i, 0, V.DataTable.dtWOs$dtOut.RowCount--, 2)
			Gui.F_WO.GsGCWO.SetRowAppearance("gvChildOut", V.Local.i, "BackColor", "AliceBlue")
		F.Intrinsic.Control.Next(V.Local.i)
		
	F.Intrinsic.Control.Catch
	
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
		F.Intrinsic.UI.Msgbox(V.Global.sError)
		F.Intrinsic.Control.End()
		
	F.Intrinsic.Control.EndTry
	
Program.Sub.LoadDtDvGvOut.End

Program.Sub.GsGCWO_RowCellClick.Start
	V.Local.sParams.Declare()
	V.Local.sJob.Declare()
	V.Local.sSuffix.Declare()
	V.Local.sPart.Declare()
	V.Local.sLoc.Declare()
	V.Local.sPO.Declare()
	V.Local.sSQL.Declare()
	V.Local.sRet.Declare()
	V.Local.bValue.Declare(Boolean, False)
	
	F.Intrinsic.Control.Try

		' If View is selected, then user can open view versions of WOs, Parts, POs. Cannot Print or Release.
		' Else, Edit is selected and user can open edit versions and also Print or Release.
		F.Intrinsic.Control.If(V.Screen.F_WO!optView.Value, =, True)
		
			F.Intrinsic.Control.SelectCase(V.Args.COLUMN)
			
				F.Intrinsic.Control.CaseAny("JOB", "SUFFIX")
					F.Intrinsic.Control.CallSub(DisableScreen)
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvWOs", "JOB", V.Args.RowIndex, V.Local.sJob)
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvWOs", "SUFFIX", V.Args.RowIndex, V.Local.sSuffix)
					F.Intrinsic.String.Build("7!*!{0}!*!{1}!*!A", V.Local.sJob, V.Local.sSuffix, V.Local.sParams)
					F.Global.General.CallWrapperSync(450000, V.Local.sParams)
					Gui.F_WO.GsGCWO.Enabled(True)
					F.Intrinsic.Control.CallSub(EnableScreen)
					F.Intrinsic.Control.ExitSub()
					
				F.Intrinsic.Control.CaseAny("DISPLAY_PART","LOCATION")
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvWOs","PART", V.Args.RowIndex, V.Local.sPart)
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvWOs","LOCATION", V.Args.RowIndex, V.Local.sLoc)
					F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sPart, V.Local.sLoc, V.Local.sParams)
					F.Intrinsic.Control.CallSub(DisableScreen)
					F.Global.General.CallWrapperSync(300011, V.Local.sParams)
					Gui.F_WO.GsGCWO.Enabled(True)
					F.Intrinsic.Control.CallSub(EnableScreen)
					F.Intrinsic.Control.ExitSub()
									
				F.Intrinsic.Control.CaseAny("JOBCHILD", "SUFFIXCHILD")
					F.Intrinsic.Control.CallSub(DisableScreen)
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvChildWOs", "JOB", V.Args.RowIndex, V.Local.sJob)
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvChildWOs", "SUFFIX", V.Args.RowIndex, V.Local.sSuffix)
					F.Intrinsic.String.Build("7!*!{0}!*!{1}!*!A", V.Local.sJob, V.Local.sSuffix, V.Local.sParams)
					F.Global.General.CallWrapperSync(450000, V.Local.sParams)
					Gui.F_WO.GsGCWO.Enabled(True)
					F.Intrinsic.Control.CallSub(EnableScreen)
					F.Intrinsic.Control.ExitSub()
					
				F.Intrinsic.Control.CaseAny("DISPLAY_PARTCHILD","LOCATIONCHILD")
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvChildWOs","PART", V.Args.RowIndex, V.Local.sPart)
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvChildWOs","LOCATION", V.Args.RowIndex, V.Local.sLoc)
					F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sPart, V.Local.sLoc, V.Local.sParams)
					F.Intrinsic.Control.CallSub(DisableScreen)
					F.Global.General.CallWrapperSync(300011, V.Local.sParams)
					Gui.F_WO.GsGCWO.Enabled(True)
					F.Intrinsic.Control.CallSub(EnableScreen)
					F.Intrinsic.Control.ExitSub()
					
				F.Intrinsic.Control.Case("PRINTED")
					F.Intrinsic.Control.ExitSub()
					
				F.Intrinsic.Control.Case("SELECTED")
					F.Intrinsic.Control.ExitSub()
					
				F.Intrinsic.Control.CaseAny("Matl_DisplayPart", "Matl_Location")
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvMatl", "Matl_Part", V.Args.RowIndex, V.Local.sPart)
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvMatl", "Matl_Location", V.Args.RowIndex, V.Local.sLoc)
					F.Intrinsic.String.Build("{0}!*!{1}!*!O", V.Local.sPart, V.Local.sLoc, V.Local.sParams)
					F.Intrinsic.Control.CallSub(DisableScreen)
					F.Global.General.CallWrapperSync(300011, V.Local.sParams)
					Gui.F_WO.GsGCWO.Enabled(True)
					F.Intrinsic.Control.CallSub(EnableScreen)
					F.Intrinsic.Control.ExitSub()
					
				F.Intrinsic.Control.CaseAny("Matl_DisplayPartCHILD", "Matl_LocationCHILD")
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvChildMat", "Matl_Part", V.Args.RowIndex, V.Local.sPart)
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvChildMat", "Matl_Location", V.Args.RowIndex, V.Local.sLoc)
					F.Intrinsic.String.Build("{0}!*!{1}!*!O", V.Local.sPart, V.Local.sLoc, V.Local.sParams)
					F.Intrinsic.Control.CallSub(DisableScreen)
					F.Global.General.CallWrapperSync(300011, V.Local.sParams)
					Gui.F_WO.GsGCWO.Enabled(True)
					F.Intrinsic.Control.CallSub(EnableScreen)
					F.Intrinsic.Control.ExitSub()
					
				F.Intrinsic.Control.CaseAny("Matl_PoLines_PoNumber", "Matl_PoLines_PoLine")
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvMatlPoLines", "Matl_PoLines_PoNumber", V.Args.RowIndex, V.Local.sPO)
					F.Intrinsic.String.Build("V!*!{0}!*!", V.Local.sPO, V.Local.sParams)
					F.Intrinsic.Control.CallSub(DisableScreen)
					F.Global.General.CallWrapperSync(175200, V.Local.sParams)
					Gui.F_WO.GsGCWO.Enabled(True)
					F.Intrinsic.Control.CallSub(EnableScreen)
					F.Intrinsic.Control.ExitSub()
					
				F.Intrinsic.Control.CaseAny("Matl_PoLn_PoNoCHILD", "Matl_PoLn_PoLnsCHILD")
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvChildMatlPoLines", "Matl_PoLines_PoNumber", V.Args.RowIndex, V.Local.sPO)
					F.Intrinsic.String.Build("V!*!{0}!*!", V.Local.sPO, V.Local.sParams)
					F.Intrinsic.Control.CallSub(DisableScreen)
					F.Global.General.CallWrapperSync(175200, V.Local.sParams)
					Gui.F_WO.GsGCWO.Enabled(True)
					F.Intrinsic.Control.CallSub(EnableScreen)
					F.Intrinsic.Control.ExitSub()
					
				F.Intrinsic.Control.CaseAny("Out_PoNumber", "Out_PoLine")
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvOut", "Out_PoNumber", V.Args.RowIndex, V.Local.sPO)
					F.Intrinsic.String.Build("V!*!{0}!*!", V.Local.sPO, V.Local.sParams)
					F.Intrinsic.Control.CallSub(DisableScreen)
					F.Global.General.CallWrapperSync(175200, V.Local.sParams)
					Gui.F_WO.GsGCWO.Enabled(True)
					F.Intrinsic.Control.CallSub(EnableScreen)
					F.Intrinsic.Control.ExitSub()
					
				F.Intrinsic.Control.CaseAny("Out_PoNOChild", "Out_PoLNChild")
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvChildOut", "Out_PoNumber", V.Args.RowIndex, V.Local.sPO)
					F.Intrinsic.String.Build("V!*!{0}!*!", V.Local.sPO, V.Local.sParams)
					F.Intrinsic.Control.CallSub(DisableScreen)
					F.Global.General.CallWrapperSync(175200, V.Local.sParams)
					Gui.F_WO.GsGCWO.Enabled(True)
					F.Intrinsic.Control.CallSub(EnableScreen)
					F.Intrinsic.Control.ExitSub()
					
				F.Intrinsic.Control.Case("Matl_InvQtyOnHand")
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvMatl", "Matl_Part", V.Args.RowIndex, V.Local.sPart)
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvMatl", "Matl_Location", V.Args.RowIndex, V.Local.sLoc)
					F.Intrinsic.Control.CallSub(PhysicalInvPop, "PART", V.Local.sPart, "LOCA", V.Local.sLoc)
					
				F.Intrinsic.Control.Case("Matl_InvQtyOnHandChild")
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvChildMat", "Matl_Part", V.Args.RowIndex, V.Local.sPart)
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvChildMat", "Matl_Location", V.Args.RowIndex, V.Local.sLoc)
					F.Intrinsic.Control.CallSub(PhysicalInvPop, "PART", V.Local.sPart, "LOCA", V.Local.sLoc)
					
			F.Intrinsic.Control.EndSelect
			
		F.Intrinsic.Control.Else
			
			'Edit mode
			F.Intrinsic.Control.SelectCase(V.Args.COLUMN)
			
				F.Intrinsic.Control.CaseAny("JOB","SUFFIX")
					F.Intrinsic.Control.CallSub(DisableScreen)
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvWOs", "JOB", V.Args.RowIndex, V.Local.sJob)
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvWOs", "SUFFIX", V.Args.RowIndex, V.Local.sSuffix)
					F.Intrinsic.String.Build("{0}!*!{1}!*!O", V.Local.sJob, V.Local.sSuffix, V.Local.sParams)
					F.Global.General.CallWrapperSync(2009, V.Local.sParams)
					Gui.F_WO.GsGCWO.Enabled(True)
					F.Intrinsic.Control.CallSub(EnableScreen)
					F.Intrinsic.Control.ExitSub()
					
				F.Intrinsic.Control.CaseAny("DISPLAY_PART","LOCATION")
					F.Intrinsic.Control.CallSub(DisableScreen)
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvWOs", "PART", V.Args.RowIndex, V.Local.sPart)
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvWOs", "LOCATION", V.Args.RowIndex, V.Local.sLoc)
					F.Intrinsic.String.Build("{0}!*!{1}!*!M",V.Local.sPart, V.Local.sLoc, V.Local.sParams)
					F.Global.General.CallWrapperSync(300011, V.Local.sParams)
					Gui.F_WO.GsGCWO.Enabled(True)
					F.Intrinsic.Control.CallSub(EnableScreen)
					F.Intrinsic.Control.ExitSub()
					
				F.Intrinsic.Control.CaseAny("JOBCHILD","SUFFIXCHILD")
					F.Intrinsic.Control.CallSub(DisableScreen)
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvChildWOs", "JOB", V.Args.RowIndex, V.Local.sJob)
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvChildWOs", "SUFFIX", V.Args.RowIndex, V.Local.sSuffix)
					F.Intrinsic.String.Build("{0}!*!{1}!*!O", V.Local.sJob, V.Local.sSuffix, V.Local.sParams)
					F.Global.General.CallWrapperSync(2009, V.Local.sParams)
					Gui.F_WO.GsGCWO.Enabled(True)
					F.Intrinsic.Control.CallSub(EnableScreen)
					F.Intrinsic.Control.ExitSub()
					
				F.Intrinsic.Control.CaseAny("DISPLAY_PARTCHILD","LOCATIONCHILD")
					F.Intrinsic.Control.CallSub(DisableScreen)
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvChildWOs", "PART", V.Args.RowIndex, V.Local.sPart)
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvChildWOs", "LOCATION", V.Args.RowIndex, V.Local.sLoc)
					F.Intrinsic.String.Build("{0}!*!{1}!*!M",V.Local.sPart, V.Local.sLoc, V.Local.sParams)
					F.Global.General.CallWrapperSync(300011, V.Local.sParams)
					Gui.F_WO.GsGCWO.Enabled(True)
					F.Intrinsic.Control.CallSub(EnableScreen)
					F.Intrinsic.Control.ExitSub()
					
				F.Intrinsic.Control.Case("PRINTED")
					
					Gui.F_WO.GsGCWO.SetCellValueByColumnName("gvWOs", "PRINTED", V.Args.RowIndex, True)
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvWOs", "JOB", V.Args.RowIndex, V.Local.sJob)
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvWOs", "SUFFIX", V.Args.RowIndex, V.Local.sSuffix)
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sJob, V.Local.sSuffix, "1811", V.Local.sParams)
'					F.Global.General.CallWrapperSync(900100, V.Local.sParams)
					F.Intrinsic.Control.ExitSub()
					
				F.Intrinsic.Control.Case("SELECTED")
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvWOs", "SELECTED", V.Args.RowIndex, V.Local.bValue)
					Gui.F_WO.GsGCWO.SetCellValueByColumnName("gvWOs", "SELECTED", V.Args.RowIndex, V.Local.bValue.Not)
					F.Intrinsic.Control.ExitSub()
					
				F.Intrinsic.Control.Case("RELEASED")
					Gui.F_WO.GsGCWO.SetCellValueByColumnName("gvWOs", "RELEASED", V.Args.RowIndex, True)
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvWOs", "JOB", V.Args.RowIndex, V.Local.sJob)
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvWOs", "SUFFIX", V.Args.RowIndex, V.Local.sSuffix)
					f.Intrinsic.String.Format(V.Ambient.Date.PervasiveDate, "MMDDYY", V.Local.sRet)
					F.Intrinsic.Control.If(V.Caller.GSSVersion, =, "2016.1", OR, V.Caller.GSSVersion, =, "2016.2")
						F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_PRTD = CASE WHEN FLAG_WO_PRTD = '' Then 'X' WHEN FLAG_WO_PRTD = 'Y' Then 'R' END, DATE_RELEASED = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sRet, V.Local.sJob, V.Local.sSuffix.Trim, V.Local.sSQL)
					F.Intrinsic.Control.Else
						F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_RELEASED = 'Y', DATE_RELEASED = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';", V.Local.sRet, V.Local.sJob, V.Local.sSuffix.Trim, V.Local.sSQL)
					F.Intrinsic.Control.EndIf
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
					F.Intrinsic.Control.ExitSub()
					
				F.Intrinsic.Control.CaseAny("Matl_DisplayPart", "Matl_Location")
					F.Intrinsic.Control.CallSub(DisableScreen)
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvMatl", "Matl_Part", V.Args.RowIndex, V.Local.sPart)
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvMatl", "Matl_Location", V.Args.RowIndex, V.Local.sLoc)
					F.Intrinsic.String.Build("{0}!*!{1}!*!M", V.Local.sPart, V.Local.sLoc, V.Local.sParams)
					F.Global.General.CallWrapperSync(300011, V.Local.sParams)
					Gui.F_WO.GsGCWO.Enabled(True)
					F.Intrinsic.Control.CallSub(EnableScreen)
					F.Intrinsic.Control.ExitSub()
					
				F.Intrinsic.Control.CaseAny("Matl_DisplayPartCHILD", "Matl_LocationCHILD")
					F.Intrinsic.Control.CallSub(DisableScreen)
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvChildMat", "Matl_Part", V.Args.RowIndex, V.Local.sPart)
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvChildMat", "Matl_Location", V.Args.RowIndex, V.Local.sLoc)
					F.Intrinsic.String.Build("{0}!*!{1}!*!M", V.Local.sPart, V.Local.sLoc, V.Local.sParams)
					F.Global.General.CallWrapperSync(300011, V.Local.sParams)
					Gui.F_WO.GsGCWO.Enabled(True)
					F.Intrinsic.Control.CallSub(EnableScreen)
					F.Intrinsic.Control.ExitSub()
					
				F.Intrinsic.Control.CaseAny("Matl_PoLines_PoNumber", "Matl_PoLines_PoLine")
					F.Intrinsic.Control.CallSub(DisableScreen)
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvMatlPoLines", "Matl_PoLines_PoNumber", V.Args.RowIndex, V.Local.sPO)
					F.Intrinsic.String.Build("O!*!{0}!*!", V.Local.sPO, V.Local.sParams)
					F.Global.General.CallWrapperSync(175200, V.Local.sParams)
					Gui.F_WO.GsGCWO.Enabled(True)
					F.Intrinsic.Control.CallSub(EnableScreen)
					F.Intrinsic.Control.ExitSub()
					
				F.Intrinsic.Control.CaseAny("Matl_PoLn_PoNoCHILD", "Matl_PoLn_PoLnsCHILD")
					F.Intrinsic.Control.CallSub(DisableScreen)
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvChildMatlPoLines", "Matl_PoLines_PoNumber", V.Args.RowIndex, V.Local.sPO)
					F.Intrinsic.String.Build("O!*!{0}!*!", V.Local.sPO, V.Local.sParams)
					F.Global.General.CallWrapperSync(175200, V.Local.sParams)
					Gui.F_WO.GsGCWO.Enabled(True)
					F.Intrinsic.Control.CallSub(EnableScreen)
					F.Intrinsic.Control.ExitSub()
					
				F.Intrinsic.Control.CaseAny("Out_PoNumber", "Out_PoLine")
					F.Intrinsic.Control.CallSub(DisableScreen)
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvOut", "Out_PoNumber", V.Args.RowIndex, V.Local.sPO)
					F.Intrinsic.String.Build("O!*!{0}!*!", V.Local.sPO, V.Local.sParams)
					F.Global.General.CallWrapperSync(175200, V.Local.sParams)
					Gui.F_WO.GsGCWO.Enabled(True)
					F.Intrinsic.Control.CallSub(EnableScreen)
					F.Intrinsic.Control.ExitSub()
					
				F.Intrinsic.Control.CaseAny("Out_PoNOChild", "Out_PoLNChild")
					F.Intrinsic.Control.CallSub(DisableScreen)
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvChildOut", "Out_PoNumber", V.Args.RowIndex, V.Local.sPO)
					F.Intrinsic.String.Build("O!*!{0}!*!", V.Local.sPO, V.Local.sParams)
					F.Global.General.CallWrapperSync(175200, V.Local.sParams)
					Gui.F_WO.GsGCWO.Enabled(True)
					F.Intrinsic.Control.CallSub(EnableScreen)
					F.Intrinsic.Control.ExitSub()
					
				F.Intrinsic.Control.Case("Matl_InvQtyOnHand")
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvMatl", "Matl_Part", V.Args.RowIndex, V.Local.sPart)
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvMatl", "Matl_Location", V.Args.RowIndex, V.Local.sLoc)
					F.Intrinsic.Control.CallSub(PhysicalInvPop, "PART", V.Local.sPart, "LOCA", V.Local.sLoc)
					
				F.Intrinsic.Control.Case("Matl_InvQtyOnHandChild")
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvChildMat", "Matl_Part", V.Args.RowIndex, V.Local.sPart)
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvChildMat", "Matl_Location", V.Args.RowIndex, V.Local.sLoc)
					F.Intrinsic.Control.CallSub(PhysicalInvPop, "PART", V.Local.sPart, "LOCA", V.Local.sLoc)
					
			F.Intrinsic.Control.EndSelect
			
		F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
	
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
		F.Intrinsic.UI.Msgbox(V.Global.sError)
		F.Intrinsic.Control.End()
		
	F.Intrinsic.Control.EndTry
	
Program.Sub.GsGCWO_RowCellClick.End

Program.Sub.GsGCWO_CellValueChanged.Start
	V.Local.sSQL.Declare()
	V.Local.sJob.Declare()
	V.Local.sSuffix.Declare()
	V.Local.sText.Declare()
	V.Local.sSCCD.Declare(String, "")
	V.Local.fOrig.Declare(Float, 0.0)
	V.Local.sPart.Declare(String, "")
	V.Local.sLocation.Declare(String, "")
	V.Local.sFilter.Declare(String, "")
	V.Local.dDueDate.Declare(Date, "01/01/1900")
	
	F.Intrinsic.Control.Try
		F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
		
		F.Intrinsic.Control.Case("NOTES")
			
			Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvWOs", "JOB", V.Args.RowIndex, V.Local.sJob)
			Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvWOs", "SUFFIX", V.Args.RowIndex, V.Local.sSuffix)
			F.Intrinsic.String.Replace(V.Args.Value, "'", "''", V.Local.sText)
			
			' If the JS already exists in the notes, then Delete first before Insert.
			F.Intrinsic.String.Build("SELECT * FROM gab_4135_wo_notes WHERE js = '{0}{1}';", V.Local.sJob, V.Local.sSuffix, V.Local.sSQL)
			F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF, =, False)
			
				F.Intrinsic.String.Build("DELETE FROM gab_4135_wo_notes WHERE js = '{0}{1}';", V.Local.sJob, V.Local.sSuffix, V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
				
			F.Intrinsic.Control.EndIf
			
			F.Intrinsic.String.Build("INSERT INTO gab_4135_wo_notes(js, job, suffix, notes) VALUES('{0}{1}','{0}','{1}','{2}');", V.Local.sJob, V.Local.sSuffix, V.Local.sText, V.Local.sSQL)
			F.ODBC.Connection!con.Execute(V.Local.sSQL)
			
			F.ODBC.con!rstNotes.Close()
			
		F.Intrinsic.Control.Case("NOTES_CHILD")
			
			Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvChildWOs", "JOB", V.Args.RowIndex, V.Local.sJob)
			Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvChildWOs", "SUFFIX", V.Args.RowIndex, V.Local.sSuffix)
			F.Intrinsic.String.Replace(V.Args.Value, "'", "''", V.Local.sText)
			
			' If the JS already exists in the notes, then Delete first before Insert.
			F.Intrinsic.String.Build("SELECT * FROM gab_4135_wo_notes WHERE js = '{0}{1}';", V.Local.sJob, V.Local.sSuffix, V.Local.sSQL)
			F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF, =, False)
			
				F.Intrinsic.String.Build("DELETE FROM gab_4135_wo_notes WHERE js = '{0}{1}';", V.Local.sJob, V.Local.sSuffix, V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
				
			F.Intrinsic.Control.EndIf
			
			F.Intrinsic.String.Build("INSERT INTO gab_4135_wo_notes(js, job, suffix, notes) VALUES('{0}{1}','{0}','{1}','{2}');", V.Local.sJob, V.Local.sSuffix, V.Local.sText, V.Local.sSQL)
			F.ODBC.Connection!con.Execute(V.Local.sSQL)
			
			F.ODBC.con!rstNotes.Close()
			
		F.Intrinisc.Control.Case("MANTOJOB_QTY")
			Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvMatl", "SourceCode", V.Args.RowIndex, V.Local.sSCCD)
			'Needs to be reverted when we finish """"""""""""
			F.Intrinsic.Control.If(V.Local.sSCCD, "<>", "F")
				'We want to return it to its natural state
				F.Intrinsic.Control.BlockEvents
				Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvMatl", "OrigQtyOnWO", V.Args.RowIndex, V.Local.fOrig)
				Gui.F_WO.GsGCWO.SetCellValueByColumnName("gvMatl", "MANTOJOB_QTY", V.Args.RowIndex, V.Local.fOrig)
				F.Intrinsic.Control.UnBlockEvents
				
			F.Intrinsic.Control.Else
				'We write it down on the WO table to make updates when user clicks save
				Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvMatl", "ManToJob_Parent", V.Args.RowIndex, V.Local.sJob)
				Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvMatl", "ManToJob_Suffix", V.Args.RowIndex, V.Local.sSuffix)
				Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvMatl", "ManToJob_Qty", V.Args.RowIndex, V.Local.fOrig)
				Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvMatl", "Matl_Part", V.Args.RowIndex, V.Local.sPart)
				Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvMatl", "Matl_Location", V.Args.RowIndex, V.Local.sLocation)
				Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvMatl", "ManToJob_DueDate", V.Args.RowIndex, V.Local.sText)
				
				F.Intrinsic.Control.If(V.Local.sText.Trim, =, "")
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvMatl", "Matl_Date_due", V.Args.RowIndex, V.Local.sText)
					F.Intrinsic.Date.ConvertDString(V.Local.sText.Trim, "MMDDYY", V.Local.dDueDate)
				
				F.Intrinsic.Control.Else
					F.Intrinsic.Date.ConvertDString(V.Local.sText.Trim, "MM/DD/YY", V.Local.dDueDate)
					
				F.Intrinsic.Control.EndIf
				
				F.Intrinsic.String.Build("[Part] = '{0}' and [Location] = '{1}' and [WorkOrder] = '{2}' and [WorkOrderSuffix] = '{3}'", V.Local.sPart, V.Local.sLocation, V.Local.sJob, V.Local.sSuffix, V.Local.sFilter)
				F.Data.DataView.Create("dtCloseWOUpdates", "dvNewChange", 22, V.Local.sFilter, "")
				F.Intrinsic.Control.If(V.DataView.dtCloseWOUpdates!dvNewChange.RowCount, =, 0)
					'Add a new entry
					F.Data.DataTable.AddRow("dtCloseWOUpdates", "Part", V.Local.sPart, "Location", V.Local.sLocation, "WorkOrder", V.Local.sJob, "WorkOrderSuffix", V.Local.sSuffix, "NewQuantity", V.Local.fOrig, "OrderDueDate", V.Local.dDueDate.DateComp)
				F.Intrinsic.Control.Else
					'Just modify the value in the table
					F.Data.DataView.SetValue("dtCloseWOUpdates", "dvNewChange", -1, "NewQuantity", V.Local.fOrig, "OrderDueDate", V.Local.dDueDate.DateComp)
				F.Intrinsic.Control.EndIf
				
				F.Data.DataView.Close("dtCloseWOUpdates", "dvNewChange")
			F.Intrinsic.Control.EndIf
			
			
		F.Intrinsic.Control.Case("MANTOJOB_QTYCHILD")
			Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvChildMat", "SourceCode", V.Args.RowIndex, V.Local.sSCCD)
			'Needs to be reverted when we finish """"""""""""
			F.Intrinsic.Control.If(V.Local.sSCCD, "<>", "F")
				'We want to return it to its natural state
				F.Intrinsic.Control.BlockEvents
				Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvChildMat", "OrigQtyOnWO", V.Args.RowIndex, V.Local.fOrig)
				Gui.F_WO.GsGCWO.SetCellValueByColumnName("gvChildMat", "MANTOJOB_QTYCHILD", V.Args.RowIndex, V.Local.fOrig)
				F.Intrinsic.Control.UnBlockEvents
			F.Intrinsic.Control.Else
				'We write it down on the WO table to make updates when user clicks save
				Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvChildMat", "ManToJob_Parent", V.Args.RowIndex, V.Local.sJob)
				Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvChildMat", "ManToJob_Suffix", V.Args.RowIndex, V.Local.sSuffix)
				Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvChildMat", "MANTOJOB_QTYCHILD", V.Args.RowIndex, V.Local.fOrig)
				Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvChildMat", "Matl_Part", V.Args.RowIndex, V.Local.sPart)
				Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvChildMat", "Matl_Location", V.Args.RowIndex, V.Local.sLocation)
				Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvChildMat", "ManToJob_DueDate", V.Args.RowIndex, V.Local.sText)
				
				F.Intrinsic.Control.If(V.Local.sText.Trim, =, "")
					Gui.F_WO.GsGCWO.GetCellValueByColumnName("gvMatl", "Matl_Date_due", V.Args.RowIndex, V.Local.sText)
					F.Intrinsic.Date.ConvertDString(V.Local.sText.Trim, "MMDDYY", V.Local.dDueDate)
				
				F.Intrinsic.Control.Else
					F.Intrinsic.Date.ConvertDString(V.Local.sText.Trim, "MM/DD/YY", V.Local.dDueDate)
					
				F.Intrinsic.Control.EndIf
				
				F.Intrinsic.String.Build("[Part] = '{0}' and [Location] = '{1}' and [WorkOrder] = '{2}' and [WorkOrderSuffix] = '{3}'", V.Local.sPart, V.Local.sLocation, V.Local.sJob, V.Local.sSuffix, V.Local.sFilter)
				F.Data.DataView.Create("dtCloseWOUpdates", "dvNewChange", 22, V.Local.sFilter, "")
				F.Intrinsic.Control.If(V.DataView.dtCloseWOUpdates!dvNewChange.RowCount, =, 0)
					'Add a new entry
					F.Data.DataTable.AddRow("dtCloseWOUpdates", "Part", V.Local.sPart, "Location", V.Local.sLocation, "WorkOrder", V.Local.sJob, "WorkOrderSuffix", V.Local.sSuffix, "NewQuantity", V.Local.fOrig, "OrderDueDate", V.Local.dDueDate.DateComp)
				F.Intrinsic.Control.Else
					'Just modify the value in the table
					F.Data.DataView.SetValue("dtCloseWOUpdates", "dvNewChange", -1, "NewQuantity", V.Local.fOrig, "OrderDueDate", V.Local.dDueDate.DateComp)
				F.Intrinsic.Control.EndIf
				
				F.Data.DataView.Close("dtCloseWOUpdates", "dvNewChange")
			F.Intrinsic.Control.EndIf
			
		F.Intrinsic.Control.EndSelect
	
	F.Intrinsic.Control.Catch
	
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
		F.Intrinsic.UI.Msgbox(V.Global.sError)
		F.Intrinsic.Control.End()
		
	F.Intrinsic.Control.EndTry
	
Program.Sub.GsGCWO_CellValueChanged.End

Program.Sub.picGSSLogo_DblClick.Start
	F.Intrinsic.Control.Try
	
		F.Intrinsic.Task.ShellExec(0, "Open", "http://www.globalshopsolutions.com/login-customer", "", "", 0)
	
	F.Intrinsic.Control.Catch
		
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
		F.Intrinsic.UI.Msgbox(V.Global.sError)
		F.Intrinsic.Control.End()
		
	F.Intrinsic.Control.EndTry
	
Program.Sub.picGSSLogo_DblClick.End

Program.Sub.Print_Selected_Click.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare(String, "")
V.Local.sFilter.Declare(String, "")
V.Local.sParams.Declare(String, "")
V.Local.sJob.Declare(String, "")
V.Local.iCount.Declare(Long, 0)
V.Local.iChild.Declare(Long, 0)

'We are going to print all selected jobs and their children as well.
F.Data.DataView.Create("dtWOs", "dvToPrint", 22, "[SELECTED] = '1'", "JOB ASC, SUFFIX ASC")

F.Intrinsic.Control.If(V.DataView.dtWOs!dvToPrint.RowCount, >, 0)
	'We are going to loop through and print all work orders	
	F.Intrinsic.Control.For(V.Local.iCount, 0, V.DataView.dtWOs!dvToPrint.RowCount--, 1)
		'At this time we are just going to leave this alone, since we are unsure of how it is all going to work
		'We are going to pull all child work orders for the parent and print them in order
		V.Local.sJob.Set(V.DataView.dtWOs!dvToPrint(V.Local.iCount).Job!FieldValTrim)
		F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sJob, "000", "1811", V.Local.sParams)
		F.Global.General.CallWrapperSync(900100, V.Local.sParams)
		
		F.Intrinsic.String.Build("[JOB] = '{0}'", V.Local.sJob, V.Local.sFilter)
		F.Data.DataView.Create("dtWOs$dtChildren", "dvChildToPrint", 22, V.Local.sFiter, "SUFFIX ASC")
		
		F.Intrinsic.Control.For(V.Local.iChild, 0, V.DataView.dtWOs$dtChildren!dvChildToPrint.RowCount--, 1)
			F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sJob, V.DataView.dtWOs$dtChildren!dvChildToPrint(V.Local.iChild).SUFFIX!FieldValTrim, "1811", V.Local.sParams)
			F.Global.General.CallWrapperSync(900100, V.Local.sParams)
		F.Intrinsic.Control.Next(V.Local.iChild)
		
		F.Data.DataView.Close("dtWOs$dtChildren", "dvChildToPrint")
	F.Intrinsic.Control.Next(V.Local.iCount)
	
F.Intrinsic.Control.Else
	F.Intrinsic.UI.Msgbox("Please select lines to print.", "NO JOBS WERE SELECTED")
	
F.Intrinsic.Control.EndIf

F.Data.DataView.Close("dtWOs", "dvToPrint")

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
	F.Intrinsic.UI.Msgbox(V.Global.sError)
F.Intrinsic.Control.EndTry
Program.Sub.Print_Selected_Click.End

Program.Sub.Close_Selected_Click.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare(String, "")
V.Local.sFiltr.Declare(String, "")
V.Local.sFilLc.Declare(String, "")
V.Local.sCntnt.Declare(String, "")
V.Local.sWIPFl.Declare(String, "")
V.Local.sSuccs.Declare(String, "")
V.Local.sParam.Declare(String, "")
V.Local.sLbrSq.Declare(String, "")
V.Local.sTopWO.Declare(String, "")
V.Local.sCurDt.Declare(String, "")
V.Local.sPrtlc.Declare(String, "")
V.Local.fCosts.Declare(Float, 0.0)
V.Local.fPrice.Declare(Float, 0.0)
V.Local.iCount.Declare(Long, 0)
V.Local.iChild.Declare(Long, 0)

'F.Intrinsic.String.Format(V.Ambient.Date, "CCYYMMDD", V.Local.sCurDt)
V.Local.sCurDt.Set(V.Ambient.Date.FormatYYYYMMDD)

'When the user clicks on this button, they want all selected work orders to be closed. We will go through and do WIP to WIP on all children work orders, then do a WIP to FG
F.Data.DataView.Create("dtWOs", "dvToClose", 22, "[SELECTED] = 'True'", "JOB ASC")

F.Data.DataView.ToDataTable("dtWOs", "dvToClose", "dtClosing", True)
F.Data.DataTable.AddExpressionColumn("dtClosing", "PartLoc", "String", "[PART]+[LOCATION]")

F.Intrinsic.Control.For(V.Local.iCount, 0, V.DataTable.dtClosing.RowCount--, 1)
	'For every parent WO that is selected, we are going to do a WIP to WIp transaction of all the children work orders to the parent, then when all completed, we are doing a WIP to FG on the parent.
	V.Local.sTopWO.Set(V.DataTable.dtClosing(V.Local.iCount).JOB!FieldValTrim)
	
	F.Intrinsic.String.Build("[Lbr_Job] = '{0}' and [Lbr_SUFFIX] = '000'", V.Local.sTopWO, V.Local.sFiltr)
	F.Data.DataView.Create("dtWOs$dtLbr", "dvLabSeq", 22, V.Local.sFiltr, "Lbr_Sequence ASC")
	
	F.Intrinsic.Control.If(V.DataView.dtWOs$dtLbr!dvLabSeq.RowCount, >, 0)
		V.Local.sLbrSq.Set(V.DataView.dtWOs$dtLbr!dvlabSeq(0).Lbr_Sequence!FieldValTrim)
	F.Intrinsic.Control.Else
		V.Local.sLbrSq.Set("990001")
	F.Intrinsic.Control.EndIf
	
	F.Data.DataView.Close("dtWOs$dtLbr", "dvLabSeq")
	
	F.Intrinsic.String.Build("[JOB] = '{0}'", V.Local.sTopWO, V.Local.sFiltr)
	F.Data.DataView.Create("dtWOs$dtChildren", "dvChildWIP", 22, V.Local.sFiltr, "SUFFIX DESC")
	
'	F.Intrinsic.Control.For(V.Local.iChild, 0, V.DataView.dtWOs$dtChildren!dvChildWIP.RowCount--, 1)
	F.Intrinsic.Control.For(V.Local.iChild, 0, V.DataView.dtWOs!dvChildWIP.RowCount--, 1)
		
		'For WIP to WIP transactions we are going to be using a new callwrapper, which requires we write a comma delimeted file formatted:
		'Sadly could not get this to work....
		'From Work Order, 
		'From Work Order Suffix, 
		'To Work Order, 
		'To Work Order Suffix, 
		'To Work Order Sequence, 
		'Transfer Date (optional), 
		'Closed Flag, 
		'Quantity, 
		'Cost (if closing it is not needed), 
		'Price (optional)
		
'		V.Local.sCntnt.Set("500003,001,500003,000,995000,20200101,Y,500,,")
'		F.Global.Callwrapper.New("WIPtoWIP", "Manufacturing.WipToWipTransfer")
'		F.Global.Callwrapper.SetProperty("WIPtoWIP", "FileName", V.Local.sWIPFl)
'		F.Global.Callwrapper.Run("WIPtoWIP")
'		
'		F.Global.Callwrapper.GetProperty("WIPtoWIP", "Status", V.Local.sSuccs)
		
		'They want to do the child WIP to WIP to the first labor sequence of the Parent WO
		F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sTopWO, V.DataView.dtWOs!dvChildWIP(V.Local.iChild).Suffix!FieldValTrim,V.Local.sTopWO,"000", V.Local.sLbrSq,V.Local.sCurDt,"Y",V.DataView.dtWOs!dvChildWIP(V.Local.iChild).PCS_REM!FieldValTrim,"", "", V.Local.sParam)
		F.Global.General.CallWrapperSync(2060, V.Local.sParam)
		
	F.Intrinsic.Control.Next(V.Local.iChild)
	
	F.Data.DataView.Close("dtWOs$dtChildren", "dvChildWIP")
	'''''
	V.Local.sPrtlc.Set(V.DataTable.dtClosing(V.Local.iCount).PartLoc!FieldValTrim)
	V.Local.fCosts.Set(V.Dictionary.dicAmt_Cost![V.Local.sPrtlc])
	V.Local.fPrice.Set(V.Dictionary.dicAmt_Price![V.Local.sPrtlc])	
	
	'Now we need the callwrapper that will close the parent Work Order. 2003
'	F.Data.DataTable.AddRow("2003", "Mode", "NS", "WONum", V.Local.sTopWO, "WOSuffix", "000", "CloseWO", "Y", "PartDesc", V.DataTable.dtClosing(V.Local.iCount).Description!FieldValTrim, "Quantity", V.DataTable.dtClosing(V.Local.iCount).Qty_Order!FieldValFloat, "Cost", V.Local.fCosts, "Price", V.Local.fPrice, "PrintLabels", "N", "CostMethod", "I", "UpdateInv", "Y", "InvDebitAcct", "")
	F.Data.DataTable.AddRow("2003", "Mode", "NS", "WONum", V.Local.sTopWO, "WOSuffix", "000", "CloseWO", "Y", "PartDesc", V.DataTable.dtClosing(V.Local.iCount).Description!FieldValTrim, "Quantity", V.DataTable.dtClosing(V.Local.iCount).Qty_Order!FieldValFloat, "Cost", V.Local.fCosts, "Price", V.Local.fPrice, "PrintLabels", "N", "CostMethod", "I", "UpdateInv", "Y")

	'This is for if they want to use LotBin, which they currently use, so I assume it should be filled out.
'	F.Data.DataTable.AddRow("2003File", "WONum", V.Local.sTopWO, "WOSuffix", "000", "Lot", "", "Bin", "", "Heat", "", "Serial", "", "SpecificQuantity", V.DataTable.dtClosing(V.Local.iCount).Qty_Order!FieldValFloat) 
	
	F.Intrinsic.Control.CallSub(2003)
	
F.Intrinsic.Control.Next(V.Local.iCount)

F.Data.DataTable.Close("dtClosing")
F.Data.DataView.Close("dtWOs", "dvToClose")

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
	F.Intrinsic.UI.Msgbox(V.Global.sError)
F.Intrinsic.Control.EndTry
Program.Sub.Close_Selected_Click.End

Program.Sub.Save_Click.Start
F.Intrinsic.Control.Try
V.Local.iCount.Declare(Long, 0)
V.Local.sFile.Declare(String, "")
V.Local.sContent.Declare(String, "")
V.Local.sFilePath.Declare(String, "")
V.Local.sLine.Declare(String, "")
V.Local.sDueDate.Declare(String, "")
V.Local.sPartRev.Declare(String, "")
V.Local.sPart.Declare(String, "")
V.Local.sRev.Declare(String, "")
V.Local.sReturnCode.Declare(String, "")
V.Local.sSql.Declare(String, "")
V.Local.sParams.Declare(String, "")
V.Local.dDatePlace.Declare(Date, "01/01/1900")

'When the user clicks on save, we are going to update the quantity on WO information on the system 
'by either updating the quantity on existing work orders and rescheduling, or creating the new work orders and associating them with the parent work order.
F.Data.DataView.Create("dtCloseWOUpdates", "dvNewOrders", 22, "[WorkOrder] = ''", "")
F.Intrinsic.Control.For(V.Local.iCount, 0, V.DataView.dtCloseWOUpdates!dvNewOrders.RowCount--, 1)
	'We will be creating work orders for all of these parts, usint the due date in the material sequence passed from the main dashboard
	V.Local.dDatePlace.Set(V.DataView.dtCloseWOUpdates!dvNewOrders(V.Local.iCount).OrderDueDate!FieldVal)
'	F.Intrinsic.Date.Format(V.Local.dDatePlace, "YYMMDD", V.Local.sDueDate)
	F.Intrinsic.String.RPad(V.DataView.dtCloseWOUpdates!dvNewOrders(V.Local.iCount).Part!FieldValTrim, " ", 20, V.Local.sPartRev)
	F.Intrinsic.String.Left(V.Local.sPartRev, 17, V.Local.sPart)
	F.Intrinsic.String.Right(V.Local.sPartRev, 3, V.Local.sRev)
	F.Intrinsic.String.Build("{0}!@#{1}*!*{2}*!*{3}*!*{4}*!*{5}!@#", V.Local.sContent, V.Local.sPart, V.Local.sRev, V.DataView.dtCloseWOUpdates!dvNewOrders(V.Local.iCount).Location!FieldValTrim, V.Local.dDatePlace.Formatmm\dd\yyyy, V.DataView.dtCloseWOUpdates!dvNewOrders(V.Local.iCount).NewQuantity!FieldValFloat, V.Local.sContent)
	
F.Intrinsic.Control.Next(V.Local.iCount)

F.Intrinsic.Control.If(V.Local.sContent.Trim, <>, "")
	F.Intrinsic.String.Replace(V.Local.sContent, "!@#!@#", V.Ambient.NewLine, V.Local.sContent)
	F.Intrinsic.String.Replace(V.Local.sContent, "!@#", "", V.Local.sContent)
	F.Intrinsic.String.Build("{0}\{1}{2}WOCREATION.txt", V.Caller.FilesDir, V.Caller.CompanyCode, V.Caller.Terminal, V.Local.sFilePath)
	F.Intrinsic.File.String2File(V.Local.sFilePath, V.Local.sContent)
	
	F.Global.Callwrapper.New("NewWOrkOrders","Manufacturing.CreateWorkOrderFinishedGoodPart")
	F.Global.Callwrapper.SetProperty("NewWOrkOrders","FileName",V.Local.sFilePath)
	F.Global.CallWrapper.Run("NewWOrkOrders")
	F.Global.CallWrapper.GetProperty("NewWOrkOrders","ReturnCode",V.Local.sReturnCode)
	'Might need to do a check to see if stuff was created correctly
	
	F.Intrinsic.UI.Msgbox(V.Local.sReturnCode)
	
F.Intrinsic.Control.EndIf

F.Data.DataView.Close("dtCloseWOUpdates", "dvNewOrders")

F.Data.DataView.Create("dtCloseWOUpdates", "dvUpdatedOrders", 22, "[WorkOrder] <> ''", "")

F.Intrinsic.Control.For(V.Local.iCount, 0, V.DataView.dtCloseWOUpdates!dvUpdatedOrders.RowCount--, 1)
	'We need to go into the Job Header and update the Run Quantity with the new quantity, then reschedule using the due date
	F.Intrinsic.String.Build("Update JOB_HEADER set QTY_ORDER = '{0}' where Job = '{1}' and Suffix = '{2}'", V.DataView.dtCloseWOUpdates!dvUpdatedOrders(V.Local.iCount).NewQuantity!FieldValFloat, V.DataView.dtCloseWOUpdates!dvUpdatedOrders(V.Local.iCount).Job!FieldValTrim, V.DataView.dtCloseWOUpdates!dvUpdatedOrders(V.Local.iCount).Suffix!FieldValTrim, V.Local.sSql)
	F.ODBC.Connection!conx.Execute(V.Local.sSql)
	
	F.Intrinsic.Date.Format(V.DataView.dtCloseWOUpdates!dvUpdatedOrders(V.Local.iCount).OrderDueDate!FieldValDate, "YYMMDD", V.Local.sDueDate)
	F.Intrinsic.String.ConcatCallWrapperArgs("000000", V.Local.sDueDate, V.DataView.dtCloseWOUpdates!dvUpdatedOrders(V.Local.iCount).WorkOrder!FieldValTrim, V.DataView.dtCloseWOUpdates!dvUpdatedOrders(V.Local.iCount).WorkOrderSuffix!FieldValTrim, "", "B", V.Local.sParams)
	F.Global.General.CallWrapperSync(500030, V.Local.sParams)
	
F.Intrinsic.Control.Next(V.Local.iCount)

F.Data.DataView.Close("dtCloseWOUpdates", "dvUpdatedOrders")

F.Data.DataTable.Close("dtCloseWOUpdates")

F.Intrinsic.Control.CallSub(RefreshScreen)

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
	F.Intrinsic.UI.Msgbox(V.Global.sError)
F.Intrinsic.Control.EndTry
Program.Sub.Save_Click.End

Program.Sub.EditMode.Start
F.Intrinsic.Control.Try

'If they are selecting Edit mode, we need to make the CLOSE button available
F.Intrinsic.Control.If(V.Screen.F_WO!optEdit.Value, =, True)
	Gui.F_WO.cmdClose.Enabled(True)
	Gui.F_WO.cmdSave.Enabled(True)
	
	Gui.F_WO.GsGCWO.SetGridViewProperty("gvMatl", "OptionBehaviorEditable", True)
	
	Gui.F_WO.GsGCWO.SetGridViewProperty("gvMatl", "ReadOnly", False)
	
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "ManToJob_Qty", "ReadOnly", False)
	
	Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildMat", "OptionBehaviorEditable", True)
	Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildMat", "ReadOnly", False)
	
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "ManToJob_QtyChild", "ReadOnly", False)
	
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Sequence", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_DisplayPart", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Location", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Description", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvCost", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsToProd", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsCompl", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsRemain", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnHand", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnOrderPo", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnOrderWo", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "ManToJob_Qty", "ReadOnly", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyRequired", "ReadOnly", True)
	
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Sequence", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_DisplayPart", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Location", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Description", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvCost", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsToProd", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsCompl", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsRemain", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnHand", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnOrderPo", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnOrderWo", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "ManToJob_Qty", "AllowEdit", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyRequired", "AllowEdit", False)
	
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_Sequence", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_DisplayPartCHILD", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_LocationCHILD", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_Description", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvCost", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_ApsPcsToProd", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_ApsPcsCompl", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_ApsPcsRemain", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnHandChild", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnOrderPo", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnOrderWoChild", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "ManToJob_QtyChild", "ReadOnly", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyRequired", "ReadOnly", True)
	
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_Sequence", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_DisplayPartCHILD", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_LocationCHILD", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_Description", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvCost", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_ApsPcsToProd", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_ApsPcsCompl", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_ApsPcsRemain", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnHandChild", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnOrderPo", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnOrderWoChild", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "ManToJob_QtyChild", "AllowEdit", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyRequired", "AllowEdit", False)

F.Intrinsic.Control.Else

	Gui.F_WO.cmdClose.Enabled(False)
	Gui.F_WO.cmdSave.Enabled(False)
	
	Gui.F_WO.GsGCWO.SetGridViewProperty("gvMatl", "OptionBehaviorEditable", False)
	Gui.F_WO.GsGCWO.SetGridViewProperty("gvMatl", "ReadOnly", True)
	
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "ManToJob_Qty", "ReadOnly", True)
	
	Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildMat", "OptionBehaviorEditable", False)
	Gui.F_WO.GsGCWO.SetGridViewProperty("gvChildMat", "ReadOnly", True)
	
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "ManToJob_QtyChild", "ReadOnly", True)

	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Sequence", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_DisplayPart", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Location", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Description", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvCost", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsToProd", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsCompl", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsRemain", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnHand", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnOrderPo", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnOrderWo", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "ManToJob_Qty", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyRequired", "ReadOnly", True)
	
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Sequence", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_DisplayPart", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Location", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_Description", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvCost", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsToProd", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsCompl", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_ApsPcsRemain", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnHand", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnOrderPo", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyOnOrderWo", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "ManToJob_Qty", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvMatl", "Matl_InvQtyRequired", "AllowEdit", False)
	
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_Sequence", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_DisplayPartCHILD", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_LocationCHILD", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_Description", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvCost", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_ApsPcsToProd", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_ApsPcsCompl", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_ApsPcsRemain", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnHandChild", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnOrderPo", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnOrderWoChild", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "ManToJob_QtyChild", "ReadOnly", True)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyRequired", "ReadOnly", True)
	
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_Sequence", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_DisplayPartCHILD", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_LocationCHILD", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_Description", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvCost", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_ApsPcsToProd", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_ApsPcsCompl", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_ApsPcsRemain", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnHandChild", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnOrderPo", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyOnOrderWoChild", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "ManToJob_QtyChild", "AllowEdit", False)
	Gui.F_WO.GsGCWO.SetColumnProperty("gvChildMat", "Matl_InvQtyRequired", "AllowEdit", False)
	
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
	F.Intrinsic.UI.Msgbox(V.Global.sError)
F.Intrinsic.Control.EndTry
Program.Sub.EditMode.End

Program.Sub.PhysicalInvPop.Start
F.Intrinsic.Control.Try
V.Local.sSql.Declare(String, "")
V.Local.sLabel.Declare(String, "")
V.Local.bAccess.Declare(Boolean, False)

'We are going to grab the information from the system to see load the grid and labels.
'The assumption is that the Part number is passed from where this is being called from
F.Intrinsic.Control.CallSub(DisableScreen)
F.Intrinsic.String.Build("Part Number: {0}", V.Args.PART, V.Local.sLabel)
Gui.Form.lblPartNo.Text(V.Local.sLabel)

F.Intrinsic.String.Build("Location: {0}", V.Args.LOCA, V.Local.sLabel)
Gui.Form.lblLocn.Text(V.Local.sLabel)

F.ODBC.Connection!conx.OpenCompanyConnection

F.Intrinsic.String.Build("Select LOT, BIN, HEAT, SERIAL_NUMBER, QUANTITY, QUANTITY as ORIGINAL, PART, LOCATION from ITEM_MASTER where PART = '{0}' and LOCATION = '{1}'", V.Args.PART, V.Args.LOCA, V.Local.sSql)
F.Data.DataTable.CreateFromSQL("dtItem", "conx", V.Local.sSql, True)

F.ODBC.Connection!conx.Close

Gui.Form.gsgcPIA.AddGridviewFromDatatable("gridItem", "dtItem")

Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "PART", "Visible", False)
Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "LOCATION", "Visible", False)
Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "ORIGINAL", "Visible", False)

Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "LOT", "Caption", "Lot Number")
Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "BIN", "Caption", "Bin")
Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "HEAT", "Caption", "Heat Number")
Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "SERIAL_NUMBER", "Caption", "Serial Number")
Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "QUANTITY", "Caption", "Quantity")

Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "LOT", "MinWidth", 25)
Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "BIN", "MinWidth", 25)
Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "HEAT", "MinWidth", 25)
Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "SERIAL_NUMBER", "MinWidth", 50)
Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "QUANTITY", "MinWidth", 25)

Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "BIN", "VisibleIndex", 0)
Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "LOT", "VisibleIndex", 1)
Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "HEAT", "VisibleIndex", 2)
Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "SERIAL_NUMBER", "VisibleIndex", 3)
Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "QUANTITY", "VisibleIndex", 4)

Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "LOT", "HeaderHAlignment", "Lot")
Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "BIN", "HeaderHAlignment", "Bin")
Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "HEAT", "HeaderHAlignment", "Heat")
Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "SERIAL_NUMBER", "HeaderHAlignment", "Serial")
Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "QUANTITY", "HeaderHAlignment", "Quantity")

Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "LOT", "ReadOnly", True)
Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "BIN", "ReadOnly", True)
Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "HEAT", "ReadOnly", True)
Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "SERIAL_NUMBER", "ReadOnly", True)

Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "LOT", "AllowEdit", False)
Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "BIN", "AllowEdit", False)
Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "HEAT", "AllowEdit", False)
Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "SERIAL_NUMBER", "AllowEdit", False)

'We need to check to see if the user has access to Physicial Inventory to grant them access to make modifications to the 
F.Global.Security.CheckUserAccessIPM(346, 0, V.Local.bAccess)

F.Intrinsic.Control.If(V.Local.bAccess, =, True)
	Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "QUANTITY", "ReadOnly", False)
	Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "QUANTITY", "AllowEdit", True)

F.Intrinsic.Control.Else
	Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "QUANTITY", "ReadOnly", True)
	Gui.Form.gsgcPIA.SetColumnProperty("gridItem", "QUANTITY", "AllowEdit", False)
	
F.Intrinsic.Control.EndIf

Gui.Form.gsgcPIA.MainView("gridItem")

Gui.F_WO..Visible(False)

Gui.Form..Show

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
	F.Intrinsic.UI.Msgbox(V.Global.sError)
F.Intrinsic.Control.EndTry
Program.Sub.PhysicalInvPop.End

Program.Sub.InvQtyTab.Start
F.Intrinsic.Control.Try
V.Local.fQuant.Declare(Float, 0.0)
V.Local.sBin.Declare(String, "")
V.Local.sPart.Declare(String, "")
V.Local.sLoc.Declare(String, "")
V.Local.sLot.Declare(String, "")
V.Local.sHeat.Declare(String, "")
V.Local.sSerial.Declare(String, "")
V.Local.sSql.Declare(String, "")
V.Local.sTransID.Declare(String, "")
V.Local.sUserID.Declare(String, "")
V.Local.bAccess.Declare(Boolean, False)

F.Global.Security.CheckUserAccessIPM(346, 0, V.Local.bAccess)

'If they tab out, we are going to check if the value was changed, and if so we do an update the inventory on the system.
F.Intrinsic.Control.If(V.Args.COLUMN.UCase, =, "QUANTITY")
	
	F.Intrinsic.Control.If(V.Local.bAccess, =, False)
		'In the chance that a user without access to make Physical Inventory Transactions manages to change the quantity, we set the quantity back and exit the subroutine
		Gui.Form.gsgcPIA.GetCellValueByColumnName("gridItem", "ORIGINAL", V.Args.RowIndex, V.Local.fQuant)
		Gui.Form.gsgcPIA.SetCellValueByColumnName("gridItem", "QUANTITY", V.Args.RowIndex, V.Local.fQuant)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	V.Local.sUserID.Set(V.Caller.User)
	
	Gui.Form.gsgcPIA.GetCellValueByColumnName("gridItem", "QUANTITY", V.Args.RowIndex, V.Local.fQuant)
	Gui.Form.gsgcPIA.GetCellValueByColumnName("gridItem", "BIN", V.Args.RowIndex, V.Local.sBin)
	Gui.Form.gsgcPIA.GetCellValueByColumnName("gridItem", "LOT", V.Args.RowIndex, V.Local.sLot)
	Gui.Form.gsgcPIA.GetCellValueByColumnName("gridItem", "HEAT", V.Args.RowIndex, V.Local.sHeat)
	Gui.Form.gsgcPIA.GetCellValueByColumnName("gridItem", "SERIAL_NUMBER", V.Args.RowIndex, V.Local.sSerial)
	
	V.Local.sPart.Set(V.DataTable.dtItem(0).PART!FieldValTrim)
	V.Local.sLoc.Set(V.DataTable.dtItem(0).LOCATION!FieldValTrim)
	
	'To make the Physical Inventory transaction, we will be using a GS Mobile Transaction, which we can accomplish by filling in the Wireless_Line and Wireless_hdr tables
	
	F.ODBC.Connection!conx.OpenCompanyConnection
	
	F.ODBC.Connection!conx.ExecuteAndReturn("Select MAX(Trans_ID) from WIRELESS_LINE", V.Local.sTransID)
	
	F.Intrinsic.Math.Add(V.Local.sTransID.Long, 1, V.Local.sTransID)
		
	'WRITE TO WIRELESS_LINE
	Function.ODBC.Connection!Conx.OpenRecordsetRW("rstPhysInv", "Select * from WIRELESS_LINE")
	
	Function.ODBC.Conx!rstPhysInv.AddNew
	Function.ODBC.Conx!rstPhysInv.Set!TRANS_ID(V.Local.sTransID)
	Function.ODBC.Conx!rstPhysInv.Set!SEQ("0000")
	Function.ODBC.Conx!rstPhysInv.Set!TRANS_TYPE("P19")
	'Field 1 is Part
	Function.ODBC.Conx!rstPhysInv.Set!FIELD_1(V.Local.sPart)
	'Field 2 is Loc
	Function.ODBC.Conx!rstPhysInv.Set!FIELD_2(V.Local.sLoc)
	'Field 3 is Quantity
	Function.ODBC.Conx!rstPhysInv.Set!FIELD_3(V.Local.fQuant)
	'Field 4 is Bin
	Function.ODBC.Conx!rstPhysInv.Set!FIELD_4(V.Local.sBin)
	'Field 5 is Lot
	Function.ODBC.Conx!rstPhysInv.Set!FIELD_5(V.Local.sLot)
	'Field 6 is Heat
	Function.ODBC.Conx!rstPhysInv.Set!FIELD_6(V.Local.sHeat)
	'Field 7 is Serial
	Function.ODBC.Conx!rstPhysInv.Set!FIELD_7(V.Local.sSerial)
	'Field 8 is Gross Weight
	Function.ODBC.Conx!rstPhysInv.Set!FIELD_8(0000)
	'Field 9 is Tare Weight
	Function.ODBC.Conx!rstPhysInv.Set!FIELD_9(0000)
	'Field 10 is Reference
	Function.ODBC.Conx!rstPhysInv.Set!FIELD_10("")
	'Field 11  is Label Copies
	Function.ODBC.Conx!rstPhysInv.Set!FIELD_11("")
	Function.ODBC.Conx!rstPhysInv.Set!ERROR_ID(0)
	F.ODBC.Conx!rstPhysInv.Update
	F.ODBC.Conx!rstPhysInv.Close
	
	'WRITE TO WIRELESS_HDR
	Function.ODBC.Connection!Conx.OpenRecordsetRW("rstPhysInvHead", "SELECT * from WIRELESS_HDR")
	
	Function.ODBC.Conx!rstPhysInvHead.AddNew
	Function.ODBC.Conx!rstPhysInvHead.Set!TRANS_ID(V.Local.sTransID)
	Function.ODBC.Conx!rstPhysInvHead.Set!TRANS_TYPE("P19")
	Function.ODBC.Conx!rstPhysInvHead.Set!ATTEMPTED_DATE("00000000")
	Function.ODBC.Conx!rstPhysInvHead.Set!ATTEMPTED_TIME("00000000")
	Function.ODBC.Conx!rstPhysInvHead.Set!USER_ID(V.Local.sUserID)
	Function.ODBC.Conx!rstPhysInvHead.Set!BATCH(0)
	F.ODBC.Conx!rstPhysInvHead.Update
	F.ODBC.Conx!rstPhysInvHead.Close
		
F.Intrinsic.Control.EndIf

F.ODBC.Connection!conx.Close

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
	F.Intrinsic.UI.Msgbox(V.Global.sError)
F.Intrinsic.Control.EndTry
Program.Sub.InvQtyTab.End

Program.Sub.InvGridClose.Start
F.Intrinsic.Control.Try
V.Local.fTotal.Declare(Float, 0.0)
V.Local.sPart.Declare(String, "")
V.Local.sLoc.Declare(String, "")
V.Local.sFilter.Declare(String, "")
V.Local.bAccess.Declare(Boolean, False)

'Hide the screen, close the datatable, update inventory on hand in grid, make old grid visible.
Gui.Form..Visible(False)

F.Global.Security.CheckUserAccessIPM(346, 0, V.Local.bAccess)

F.Intrinsic.Control.If(V.DataTable.dtItem.RowCount, >, 0)
	F.Intrinsic.Control.If(V.Local.bAccess, =, True)
	
		'Get total of quantity on hand
		F.Data.DataTable.Compute("dtItem", "SUM(QUANTITY)", "", V.Local.fTotal)
		
		V.Local.sPart.Set(V.DataTable.dtItem(0).PART!FieldValTrim)
		V.Local.sLoc.Set(V.DataTable.dtItem(0).LOCATION!FieldValTrim)
		
		'We want to create dataviews for the material tables and update the Quantity on hand with the value that we just calculated
		F.Intrinsic.String.Build("[Matl_part] = '{0}' AND [Matl_Location] = '{1}'", V.Local.sPart, V.Local.sLoc, V.Local.sFilter)
		F.Data.DataView.Create("dtWOs$dtMatl", "dvQtyUpdate", 22, V.Local.sFilter, "")
		F.Data.DataView.SetValue("dtWOs$dtMatl", "dvQtyUpdate", -1, "Matl_InvQtyOnHand", V.Local.fTotal)
		
		F.Data.DataView.Close("dtWOs$dtMatl", "dvQtyUpdate")
		
		F.Data.DataView.Create("dtWOs$dtChildren$dtChildMat", "dvQtyUpdate", 22, V.Local.sFilter, "")
		F.Data.DataView.SetValue("dtWOs$dtChildren$dtChildMat", "dvQtyUpdate", -1, "MATL_INVQTYONHAND", V.Local.fTotal)
		
		F.Data.DataView.Close("dtWOs$dtChildren$dtChildMat", "dvQtyUpdate")
		
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Data.DataTable.Close("dtItem")

F.Intrinsic.Control.CallSub(EnableScreen)
Gui.F_WO..Show

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
	F.Intrinsic.UI.Msgbox(V.Global.sError)
F.Intrinsic.Control.EndTry
Program.Sub.InvGridClose.End

Program.Sub.ClosePopTables.Start
F.Intrinsic.Control.Try

'We are closing all tables that were used to populate data and no longer get used through the script
F.Data.DataView.Close("dtFirst", "dvParentWO")
F.Data.DataView.Close("dtFirst", "dvChildWO")
F.Data.DataTable.Close("dtFirst")

F.Data.DataView.Close("dtFirstIteration", "dvFirst")
F.Data.DataTable.Close("dtFirstIteration")

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError)
	F.Intrinsic.UI.Msgbox(V.Global.sError)
F.Intrinsic.Control.EndTry
Program.Sub.ClosePopTables.End

Program.Sub.Comments.Start
${$5$}$2.0.0.0$}$2
${$6$}$avaldez$}$20191023135130399$}$CBUu04veoT9NExad5Mkb3ylWEN0INN4AZOXvuFdNByjFu00zvme3TVuSncdFhbAPPqB/I4Y4mHg=
Program.Sub.Comments.End
